// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.1
// source: setentry/proto/setentry.proto

package setentry

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	SetEntry_SetEntry_FullMethodName = "/YrcfAgent.SetEntry/SetEntry"
)

// SetEntryClient is the client API for SetEntry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SetEntryClient interface {
	SetEntry(ctx context.Context, in *SetEntryRequest, opts ...grpc.CallOption) (*SetEntryResponse, error)
}

type setEntryClient struct {
	cc grpc.ClientConnInterface
}

func NewSetEntryClient(cc grpc.ClientConnInterface) SetEntryClient {
	return &setEntryClient{cc}
}

func (c *setEntryClient) SetEntry(ctx context.Context, in *SetEntryRequest, opts ...grpc.CallOption) (*SetEntryResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SetEntryResponse)
	err := c.cc.Invoke(ctx, SetEntry_SetEntry_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SetEntryServer is the server API for SetEntry service.
// All implementations must embed UnimplementedSetEntryServer
// for forward compatibility
type SetEntryServer interface {
	SetEntry(context.Context, *SetEntryRequest) (*SetEntryResponse, error)
	mustEmbedUnimplementedSetEntryServer()
}

// UnimplementedSetEntryServer must be embedded to have forward compatible implementations.
type UnimplementedSetEntryServer struct {
}

func (UnimplementedSetEntryServer) SetEntry(context.Context, *SetEntryRequest) (*SetEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetEntry not implemented")
}
func (UnimplementedSetEntryServer) mustEmbedUnimplementedSetEntryServer() {}

// UnsafeSetEntryServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SetEntryServer will
// result in compilation errors.
type UnsafeSetEntryServer interface {
	mustEmbedUnimplementedSetEntryServer()
}

func RegisterSetEntryServer(s grpc.ServiceRegistrar, srv SetEntryServer) {
	s.RegisterService(&SetEntry_ServiceDesc, srv)
}

func _SetEntry_SetEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SetEntryServer).SetEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SetEntry_SetEntry_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SetEntryServer).SetEntry(ctx, req.(*SetEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SetEntry_ServiceDesc is the grpc.ServiceDesc for SetEntry service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SetEntry_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "YrcfAgent.SetEntry",
	HandlerType: (*SetEntryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetEntry",
			Handler:    _SetEntry_SetEntry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "setentry/proto/setentry.proto",
}
