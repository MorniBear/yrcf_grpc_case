// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.1
// source: listdir/proto/listdir.proto

package listdir

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	ListDir_ListDir_FullMethodName = "/YrcfAgent.ListDir/ListDir"
)

// ListDirClient is the client API for ListDir service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ListDirClient interface {
	ListDir(ctx context.Context, in *ListDirRequest, opts ...grpc.CallOption) (*ListDirResponse, error)
}

type listDirClient struct {
	cc grpc.ClientConnInterface
}

func NewListDirClient(cc grpc.ClientConnInterface) ListDirClient {
	return &listDirClient{cc}
}

func (c *listDirClient) ListDir(ctx context.Context, in *ListDirRequest, opts ...grpc.CallOption) (*ListDirResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListDirResponse)
	err := c.cc.Invoke(ctx, ListDir_ListDir_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ListDirServer is the server API for ListDir service.
// All implementations must embed UnimplementedListDirServer
// for forward compatibility
type ListDirServer interface {
	ListDir(context.Context, *ListDirRequest) (*ListDirResponse, error)
	mustEmbedUnimplementedListDirServer()
}

// UnimplementedListDirServer must be embedded to have forward compatible implementations.
type UnimplementedListDirServer struct {
}

func (UnimplementedListDirServer) ListDir(context.Context, *ListDirRequest) (*ListDirResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDir not implemented")
}
func (UnimplementedListDirServer) mustEmbedUnimplementedListDirServer() {}

// UnsafeListDirServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ListDirServer will
// result in compilation errors.
type UnsafeListDirServer interface {
	mustEmbedUnimplementedListDirServer()
}

func RegisterListDirServer(s grpc.ServiceRegistrar, srv ListDirServer) {
	s.RegisterService(&ListDir_ServiceDesc, srv)
}

func _ListDir_ListDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListDirServer).ListDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ListDir_ListDir_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListDirServer).ListDir(ctx, req.(*ListDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ListDir_ServiceDesc is the grpc.ServiceDesc for ListDir service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ListDir_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "YrcfAgent.ListDir",
	HandlerType: (*ListDirServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDir",
			Handler:    _ListDir_ListDir_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "listdir/proto/listdir.proto",
}
