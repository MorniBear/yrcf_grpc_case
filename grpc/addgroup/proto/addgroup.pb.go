// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: addgroup/proto/addgroup.proto

package addgroup

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	proto "yrcf_grpc_case/grpc/common/proto/"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddGroupRequest_OsdType int32

const (
	AddGroupRequest_INVALID_TYPE AddGroupRequest_OsdType = 0
	AddGroupRequest_MDS          AddGroupRequest_OsdType = 1
	AddGroupRequest_OSS          AddGroupRequest_OsdType = 2
)

// Enum value maps for AddGroupRequest_OsdType.
var (
	AddGroupRequest_OsdType_name = map[int32]string{
		0: "INVALID_TYPE",
		1: "MDS",
		2: "OSS",
	}
	AddGroupRequest_OsdType_value = map[string]int32{
		"INVALID_TYPE": 0,
		"MDS":          1,
		"OSS":          2,
	}
)

func (x AddGroupRequest_OsdType) Enum() *AddGroupRequest_OsdType {
	p := new(AddGroupRequest_OsdType)
	*p = x
	return p
}

func (x AddGroupRequest_OsdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddGroupRequest_OsdType) Descriptor() protoreflect.EnumDescriptor {
	return file_addgroup_proto_addgroup_proto_enumTypes[0].Descriptor()
}

func (AddGroupRequest_OsdType) Type() protoreflect.EnumType {
	return &file_addgroup_proto_addgroup_proto_enumTypes[0]
}

func (x AddGroupRequest_OsdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddGroupRequest_OsdType.Descriptor instead.
func (AddGroupRequest_OsdType) EnumDescriptor() ([]byte, []int) {
	return file_addgroup_proto_addgroup_proto_rawDescGZIP(), []int{1, 0}
}

type OsdGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId       uint32                `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	FirstOsdInfo  *OsdGroupInfo_OsdInfo `protobuf:"bytes,2,opt,name=first_osd_info,json=firstOsdInfo,proto3" json:"first_osd_info,omitempty"`
	SecondOsdInfo *OsdGroupInfo_OsdInfo `protobuf:"bytes,3,opt,name=second_osd_info,json=secondOsdInfo,proto3" json:"second_osd_info,omitempty"`
}

func (x *OsdGroupInfo) Reset() {
	*x = OsdGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addgroup_proto_addgroup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OsdGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OsdGroupInfo) ProtoMessage() {}

func (x *OsdGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_addgroup_proto_addgroup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OsdGroupInfo.ProtoReflect.Descriptor instead.
func (*OsdGroupInfo) Descriptor() ([]byte, []int) {
	return file_addgroup_proto_addgroup_proto_rawDescGZIP(), []int{0}
}

func (x *OsdGroupInfo) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *OsdGroupInfo) GetFirstOsdInfo() *OsdGroupInfo_OsdInfo {
	if x != nil {
		return x.FirstOsdInfo
	}
	return nil
}

func (x *OsdGroupInfo) GetSecondOsdInfo() *OsdGroupInfo_OsdInfo {
	if x != nil {
		return x.SecondOsdInfo
	}
	return nil
}

// message for rpc add group
type AddGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsdType      AddGroupRequest_OsdType `protobuf:"varint,1,opt,name=osd_type,json=osdType,proto3,enum=YrcfAgent.AddGroupRequest_OsdType" json:"osd_type,omitempty"`
	AutoAddGroup bool                    `protobuf:"varint,2,opt,name=auto_add_group,json=autoAddGroup,proto3" json:"auto_add_group,omitempty"`
	// specified master node id, must set with parameter <slave>
	MasterNode uint32 `protobuf:"varint,3,opt,name=master_node,json=masterNode,proto3" json:"master_node,omitempty"`
	SlaveNode  uint32 `protobuf:"varint,4,opt,name=slave_node,json=slaveNode,proto3" json:"slave_node,omitempty"`
	// Use the given ID for the new group, if not set,
	// it will be gerated automatically by default.
	GroupId uint32 `protobuf:"varint,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// add group forcely even there is something unexpected
	// For example,master and slave node with different disk space.
	ForceAdd bool `protobuf:"varint,6,opt,name=force_add,json=forceAdd,proto3" json:"force_add,omitempty"`
	// Preview the schema before update to cluster.
	Preview bool `protobuf:"varint,7,opt,name=preview,proto3" json:"preview,omitempty"`
	// Use unique mirror group IDs, distinct from storage osd IDs
	UniqueGroupId bool `protobuf:"varint,8,opt,name=unique_group_id,json=uniqueGroupId,proto3" json:"unique_group_id,omitempty"`
}

func (x *AddGroupRequest) Reset() {
	*x = AddGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addgroup_proto_addgroup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupRequest) ProtoMessage() {}

func (x *AddGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_addgroup_proto_addgroup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupRequest.ProtoReflect.Descriptor instead.
func (*AddGroupRequest) Descriptor() ([]byte, []int) {
	return file_addgroup_proto_addgroup_proto_rawDescGZIP(), []int{1}
}

func (x *AddGroupRequest) GetOsdType() AddGroupRequest_OsdType {
	if x != nil {
		return x.OsdType
	}
	return AddGroupRequest_INVALID_TYPE
}

func (x *AddGroupRequest) GetAutoAddGroup() bool {
	if x != nil {
		return x.AutoAddGroup
	}
	return false
}

func (x *AddGroupRequest) GetMasterNode() uint32 {
	if x != nil {
		return x.MasterNode
	}
	return 0
}

func (x *AddGroupRequest) GetSlaveNode() uint32 {
	if x != nil {
		return x.SlaveNode
	}
	return 0
}

func (x *AddGroupRequest) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *AddGroupRequest) GetForceAdd() bool {
	if x != nil {
		return x.ForceAdd
	}
	return false
}

func (x *AddGroupRequest) GetPreview() bool {
	if x != nil {
		return x.Preview
	}
	return false
}

func (x *AddGroupRequest) GetUniqueGroupId() bool {
	if x != nil {
		return x.UniqueGroupId
	}
	return false
}

type AddGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       *proto.ResMes   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	OsdGroupInfo []*OsdGroupInfo `protobuf:"bytes,2,rep,name=osd_group_info,json=osdGroupInfo,proto3" json:"osd_group_info,omitempty"`
}

func (x *AddGroupResponse) Reset() {
	*x = AddGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addgroup_proto_addgroup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupResponse) ProtoMessage() {}

func (x *AddGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_addgroup_proto_addgroup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupResponse.ProtoReflect.Descriptor instead.
func (*AddGroupResponse) Descriptor() ([]byte, []int) {
	return file_addgroup_proto_addgroup_proto_rawDescGZIP(), []int{2}
}

func (x *AddGroupResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AddGroupResponse) GetOsdGroupInfo() []*OsdGroupInfo {
	if x != nil {
		return x.OsdGroupInfo
	}
	return nil
}

type OsdGroupInfo_OsdInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role  string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	OsdId string `protobuf:"bytes,2,opt,name=osd_id,json=osdId,proto3" json:"osd_id,omitempty"`
}

func (x *OsdGroupInfo_OsdInfo) Reset() {
	*x = OsdGroupInfo_OsdInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addgroup_proto_addgroup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OsdGroupInfo_OsdInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OsdGroupInfo_OsdInfo) ProtoMessage() {}

func (x *OsdGroupInfo_OsdInfo) ProtoReflect() protoreflect.Message {
	mi := &file_addgroup_proto_addgroup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OsdGroupInfo_OsdInfo.ProtoReflect.Descriptor instead.
func (*OsdGroupInfo_OsdInfo) Descriptor() ([]byte, []int) {
	return file_addgroup_proto_addgroup_proto_rawDescGZIP(), []int{0, 0}
}

func (x *OsdGroupInfo_OsdInfo) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *OsdGroupInfo_OsdInfo) GetOsdId() string {
	if x != nil {
		return x.OsdId
	}
	return ""
}

var File_addgroup_proto_addgroup_proto protoreflect.FileDescriptor

var file_addgroup_proto_addgroup_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x64, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x61, 0x64, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x0e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x01, 0x0a, 0x0c, 0x4f,
	0x73, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x6f, 0x73, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4f, 0x73, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4f, 0x73, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a,
	0x0f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6f, 0x73, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x4f, 0x73, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x4f, 0x73, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4f,
	0x73, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x34, 0x0a, 0x07, 0x4f, 0x73, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x73, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x73, 0x64, 0x49, 0x64, 0x22, 0xdf, 0x02, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x08, 0x6f, 0x73, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f,
	0x73, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6f, 0x73, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x64, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x6c, 0x61, 0x76,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22,
	0x2d, 0x0a, 0x07, 0x4f, 0x73, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x4d, 0x44, 0x53, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x53, 0x53, 0x10, 0x02, 0x22, 0x7c,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a,
	0x0e, 0x6f, 0x73, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x4f, 0x73, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x6f, 0x73, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x51, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x45, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x2e, 0x5a, 0x2c, 0x79, 0x72, 0x63, 0x66, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x61, 0x73,
	0x65, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x64, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x3b, 0x61, 0x64, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_addgroup_proto_addgroup_proto_rawDescOnce sync.Once
	file_addgroup_proto_addgroup_proto_rawDescData = file_addgroup_proto_addgroup_proto_rawDesc
)

func file_addgroup_proto_addgroup_proto_rawDescGZIP() []byte {
	file_addgroup_proto_addgroup_proto_rawDescOnce.Do(func() {
		file_addgroup_proto_addgroup_proto_rawDescData = protoimpl.X.CompressGZIP(file_addgroup_proto_addgroup_proto_rawDescData)
	})
	return file_addgroup_proto_addgroup_proto_rawDescData
}

var file_addgroup_proto_addgroup_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_addgroup_proto_addgroup_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_addgroup_proto_addgroup_proto_goTypes = []any{
	(AddGroupRequest_OsdType)(0), // 0: YrcfAgent.AddGroupRequest.OsdType
	(*OsdGroupInfo)(nil),         // 1: YrcfAgent.OsdGroupInfo
	(*AddGroupRequest)(nil),      // 2: YrcfAgent.AddGroupRequest
	(*AddGroupResponse)(nil),     // 3: YrcfAgent.AddGroupResponse
	(*OsdGroupInfo_OsdInfo)(nil), // 4: YrcfAgent.OsdGroupInfo.OsdInfo
	(*proto.ResMes)(nil),         // 5: YrcfAgent.ResMes
}
var file_addgroup_proto_addgroup_proto_depIdxs = []int32{
	4, // 0: YrcfAgent.OsdGroupInfo.first_osd_info:type_name -> YrcfAgent.OsdGroupInfo.OsdInfo
	4, // 1: YrcfAgent.OsdGroupInfo.second_osd_info:type_name -> YrcfAgent.OsdGroupInfo.OsdInfo
	0, // 2: YrcfAgent.AddGroupRequest.osd_type:type_name -> YrcfAgent.AddGroupRequest.OsdType
	5, // 3: YrcfAgent.AddGroupResponse.result:type_name -> YrcfAgent.ResMes
	1, // 4: YrcfAgent.AddGroupResponse.osd_group_info:type_name -> YrcfAgent.OsdGroupInfo
	2, // 5: YrcfAgent.AddGroup.AddGroup:input_type -> YrcfAgent.AddGroupRequest
	3, // 6: YrcfAgent.AddGroup.AddGroup:output_type -> YrcfAgent.AddGroupResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_addgroup_proto_addgroup_proto_init() }
func file_addgroup_proto_addgroup_proto_init() {
	if File_addgroup_proto_addgroup_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_addgroup_proto_addgroup_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*OsdGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_addgroup_proto_addgroup_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_addgroup_proto_addgroup_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_addgroup_proto_addgroup_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*OsdGroupInfo_OsdInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_addgroup_proto_addgroup_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_addgroup_proto_addgroup_proto_goTypes,
		DependencyIndexes: file_addgroup_proto_addgroup_proto_depIdxs,
		EnumInfos:         file_addgroup_proto_addgroup_proto_enumTypes,
		MessageInfos:      file_addgroup_proto_addgroup_proto_msgTypes,
	}.Build()
	File_addgroup_proto_addgroup_proto = out.File
	file_addgroup_proto_addgroup_proto_rawDesc = nil
	file_addgroup_proto_addgroup_proto_goTypes = nil
	file_addgroup_proto_addgroup_proto_depIdxs = nil
}
