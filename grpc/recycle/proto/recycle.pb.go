// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: recycle/proto/recycle.proto

package recycle

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	proto "yrcf_grpc_case/grpc/common/proto"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// arg for setting acquired page
type ListFilesInRecycleRequest_ListMode int32

const (
	ListFilesInRecycleRequest_FIRST_PAGE ListFilesInRecycleRequest_ListMode = 0
	ListFilesInRecycleRequest_PREV_PAGE  ListFilesInRecycleRequest_ListMode = 1
	ListFilesInRecycleRequest_NEXT_PAGE  ListFilesInRecycleRequest_ListMode = 2
	ListFilesInRecycleRequest_LAST_PAGE  ListFilesInRecycleRequest_ListMode = 3
)

// Enum value maps for ListFilesInRecycleRequest_ListMode.
var (
	ListFilesInRecycleRequest_ListMode_name = map[int32]string{
		0: "FIRST_PAGE",
		1: "PREV_PAGE",
		2: "NEXT_PAGE",
		3: "LAST_PAGE",
	}
	ListFilesInRecycleRequest_ListMode_value = map[string]int32{
		"FIRST_PAGE": 0,
		"PREV_PAGE":  1,
		"NEXT_PAGE":  2,
		"LAST_PAGE":  3,
	}
)

func (x ListFilesInRecycleRequest_ListMode) Enum() *ListFilesInRecycleRequest_ListMode {
	p := new(ListFilesInRecycleRequest_ListMode)
	*p = x
	return p
}

func (x ListFilesInRecycleRequest_ListMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListFilesInRecycleRequest_ListMode) Descriptor() protoreflect.EnumDescriptor {
	return file_recycle_proto_recycle_proto_enumTypes[0].Descriptor()
}

func (ListFilesInRecycleRequest_ListMode) Type() protoreflect.EnumType {
	return &file_recycle_proto_recycle_proto_enumTypes[0]
}

func (x ListFilesInRecycleRequest_ListMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListFilesInRecycleRequest_ListMode.Descriptor instead.
func (ListFilesInRecycleRequest_ListMode) EnumDescriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{10, 0}
}

type RecycleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// limitation days for file really deleted automatically
	Expiration uint32 `protobuf:"varint,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Status     string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// total size of files in recycle
	Usage   string `protobuf:"bytes,5,opt,name=usage,proto3" json:"usage,omitempty"`
	Threads uint32 `protobuf:"varint,6,opt,name=threads,proto3" json:"threads,omitempty"`
}

func (x *RecycleInfo) Reset() {
	*x = RecycleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleInfo) ProtoMessage() {}

func (x *RecycleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleInfo.ProtoReflect.Descriptor instead.
func (*RecycleInfo) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{0}
}

func (x *RecycleInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecycleInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RecycleInfo) GetExpiration() uint32 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *RecycleInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RecycleInfo) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

func (x *RecycleInfo) GetThreads() uint32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

// message for rpc list recycle
type ListRecycleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRecycleRequest) Reset() {
	*x = ListRecycleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecycleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecycleRequest) ProtoMessage() {}

func (x *ListRecycleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecycleRequest.ProtoReflect.Descriptor instead.
func (*ListRecycleRequest) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{1}
}

type ListRecycleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *proto.ResMes  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	RecycleInfo []*RecycleInfo `protobuf:"bytes,2,rep,name=recycle_info,json=recycleInfo,proto3" json:"recycle_info,omitempty"`
}

func (x *ListRecycleResponse) Reset() {
	*x = ListRecycleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecycleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecycleResponse) ProtoMessage() {}

func (x *ListRecycleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecycleResponse.ProtoReflect.Descriptor instead.
func (*ListRecycleResponse) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{2}
}

func (x *ListRecycleResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListRecycleResponse) GetRecycleInfo() []*RecycleInfo {
	if x != nil {
		return x.RecycleInfo
	}
	return nil
}

// message for rpc add recycle
type AddRecycleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// set as days
	Expiration uint32 `protobuf:"varint,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// the num of <threads> to do recycle or delete
	// if not given, will be set as a default number
	Threads uint32 `protobuf:"varint,3,opt,name=threads,proto3" json:"threads,omitempty"`
}

func (x *AddRecycleRequest) Reset() {
	*x = AddRecycleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecycleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecycleRequest) ProtoMessage() {}

func (x *AddRecycleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecycleRequest.ProtoReflect.Descriptor instead.
func (*AddRecycleRequest) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{3}
}

func (x *AddRecycleRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AddRecycleRequest) GetExpiration() uint32 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *AddRecycleRequest) GetThreads() uint32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

type AddRecycleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddRecycleResponse) Reset() {
	*x = AddRecycleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecycleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecycleResponse) ProtoMessage() {}

func (x *AddRecycleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecycleResponse.ProtoReflect.Descriptor instead.
func (*AddRecycleResponse) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{4}
}

func (x *AddRecycleResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

// message for rpc delete recycle
type DeleteRecycleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRecycleRequest) Reset() {
	*x = DeleteRecycleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecycleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecycleRequest) ProtoMessage() {}

func (x *DeleteRecycleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecycleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRecycleRequest) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRecycleRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteRecycleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteRecycleResponse) Reset() {
	*x = DeleteRecycleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecycleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecycleResponse) ProtoMessage() {}

func (x *DeleteRecycleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecycleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRecycleResponse) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRecycleResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

// message for rpc update recycle
type UpdateRecycleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TurnRecycleOn bool   `protobuf:"varint,2,opt,name=turn_recycle_on,json=turnRecycleOn,proto3" json:"turn_recycle_on,omitempty"`
	Expiration    uint32 `protobuf:"varint,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Threads       uint32 `protobuf:"varint,4,opt,name=threads,proto3" json:"threads,omitempty"`
}

func (x *UpdateRecycleRequest) Reset() {
	*x = UpdateRecycleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecycleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecycleRequest) ProtoMessage() {}

func (x *UpdateRecycleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecycleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRecycleRequest) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateRecycleRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRecycleRequest) GetTurnRecycleOn() bool {
	if x != nil {
		return x.TurnRecycleOn
	}
	return false
}

func (x *UpdateRecycleRequest) GetExpiration() uint32 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *UpdateRecycleRequest) GetThreads() uint32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

type UpdateRecycleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateRecycleResponse) Reset() {
	*x = UpdateRecycleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecycleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecycleResponse) ProtoMessage() {}

func (x *UpdateRecycleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecycleResponse.ProtoReflect.Descriptor instead.
func (*UpdateRecycleResponse) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateRecycleResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

type RecycleFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path         string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Key          string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Eid          string `protobuf:"bytes,3,opt,name=eid,proto3" json:"eid,omitempty"`
	Size         uint64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	RecycledTime uint64 `protobuf:"varint,5,opt,name=recycled_time,json=recycledTime,proto3" json:"recycled_time,omitempty"`
	Expiration   uint64 `protobuf:"varint,6,opt,name=expiration,proto3" json:"expiration,omitempty"`
	OwnerMdsId   uint32 `protobuf:"varint,7,opt,name=owner_mds_id,json=ownerMdsId,proto3" json:"owner_mds_id,omitempty"`
}

func (x *RecycleFileInfo) Reset() {
	*x = RecycleFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleFileInfo) ProtoMessage() {}

func (x *RecycleFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleFileInfo.ProtoReflect.Descriptor instead.
func (*RecycleFileInfo) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{9}
}

func (x *RecycleFileInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RecycleFileInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RecycleFileInfo) GetEid() string {
	if x != nil {
		return x.Eid
	}
	return ""
}

func (x *RecycleFileInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RecycleFileInfo) GetRecycledTime() uint64 {
	if x != nil {
		return x.RecycledTime
	}
	return 0
}

func (x *RecycleFileInfo) GetExpiration() uint64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *RecycleFileInfo) GetOwnerMdsId() uint32 {
	if x != nil {
		return x.OwnerMdsId
	}
	return 0
}

// message for rpc list files in recycle
type ListFilesInRecycleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of recycle
	Id       uint32                             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DirPath  string                             `protobuf:"bytes,2,opt,name=dir_path,json=dirPath,proto3" json:"dir_path,omitempty"`
	Key      string                             `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	ListMode ListFilesInRecycleRequest_ListMode `protobuf:"varint,4,opt,name=list_mode,json=listMode,proto3,enum=YrcfAgent.ListFilesInRecycleRequest_ListMode" json:"list_mode,omitempty"`
	// if <time> is offered, will ignore <path>
	// only list time recycled after <begin_time> if <end_time> is not offerd
	BeginTime string `protobuf:"bytes,5,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	EndTime   string `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ListFilesInRecycleRequest) Reset() {
	*x = ListFilesInRecycleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilesInRecycleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesInRecycleRequest) ProtoMessage() {}

func (x *ListFilesInRecycleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesInRecycleRequest.ProtoReflect.Descriptor instead.
func (*ListFilesInRecycleRequest) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{10}
}

func (x *ListFilesInRecycleRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListFilesInRecycleRequest) GetDirPath() string {
	if x != nil {
		return x.DirPath
	}
	return ""
}

func (x *ListFilesInRecycleRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListFilesInRecycleRequest) GetListMode() ListFilesInRecycleRequest_ListMode {
	if x != nil {
		return x.ListMode
	}
	return ListFilesInRecycleRequest_FIRST_PAGE
}

func (x *ListFilesInRecycleRequest) GetBeginTime() string {
	if x != nil {
		return x.BeginTime
	}
	return ""
}

func (x *ListFilesInRecycleRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type ListFilesInRecycleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result          *proto.ResMes      `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	RecycleFileInfo []*RecycleFileInfo `protobuf:"bytes,2,rep,name=recycle_file_info,json=recycleFileInfo,proto3" json:"recycle_file_info,omitempty"`
}

func (x *ListFilesInRecycleResponse) Reset() {
	*x = ListFilesInRecycleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilesInRecycleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesInRecycleResponse) ProtoMessage() {}

func (x *ListFilesInRecycleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesInRecycleResponse.ProtoReflect.Descriptor instead.
func (*ListFilesInRecycleResponse) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{11}
}

func (x *ListFilesInRecycleResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListFilesInRecycleResponse) GetRecycleFileInfo() []*RecycleFileInfo {
	if x != nil {
		return x.RecycleFileInfo
	}
	return nil
}

// message for rpc recycle files
type RecycleFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Eid        string `protobuf:"bytes,3,opt,name=eid,proto3" json:"eid,omitempty"`
	OwnerMdsId uint32 `protobuf:"varint,4,opt,name=owner_mds_id,json=ownerMdsId,proto3" json:"owner_mds_id,omitempty"`
}

func (x *RecycleFileRequest) Reset() {
	*x = RecycleFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleFileRequest) ProtoMessage() {}

func (x *RecycleFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleFileRequest.ProtoReflect.Descriptor instead.
func (*RecycleFileRequest) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{12}
}

func (x *RecycleFileRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecycleFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RecycleFileRequest) GetEid() string {
	if x != nil {
		return x.Eid
	}
	return ""
}

func (x *RecycleFileRequest) GetOwnerMdsId() uint32 {
	if x != nil {
		return x.OwnerMdsId
	}
	return 0
}

type RecycleFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RecycleFileResponse) Reset() {
	*x = RecycleFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleFileResponse) ProtoMessage() {}

func (x *RecycleFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleFileResponse.ProtoReflect.Descriptor instead.
func (*RecycleFileResponse) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{13}
}

func (x *RecycleFileResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

// message for rpc delete files
type DeleteFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Eid        string `protobuf:"bytes,3,opt,name=eid,proto3" json:"eid,omitempty"`
	OwnerMdsId uint32 `protobuf:"varint,4,opt,name=owner_mds_id,json=ownerMdsId,proto3" json:"owner_mds_id,omitempty"`
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteFileRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DeleteFileRequest) GetEid() string {
	if x != nil {
		return x.Eid
	}
	return ""
}

func (x *DeleteFileRequest) GetOwnerMdsId() uint32 {
	if x != nil {
		return x.OwnerMdsId
	}
	return 0
}

type DeleteFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteFileResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

type RecycleHistoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status    string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	SrcPath   string `protobuf:"bytes,4,opt,name=src_path,json=srcPath,proto3" json:"src_path,omitempty"`
	DesPath   string `protobuf:"bytes,5,opt,name=des_path,json=desPath,proto3" json:"des_path,omitempty"`
	Total     uint64 `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`
	Succeed   uint64 `protobuf:"varint,7,opt,name=succeed,proto3" json:"succeed,omitempty"`
	Failed    uint64 `protobuf:"varint,8,opt,name=failed,proto3" json:"failed,omitempty"`
	BeginTime uint64 `protobuf:"varint,9,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	EndTime   uint64 `protobuf:"varint,10,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Key       string `protobuf:"bytes,11,opt,name=key,proto3" json:"key,omitempty"`
	MdsId     uint32 `protobuf:"varint,12,opt,name=mds_id,json=mdsId,proto3" json:"mds_id,omitempty"`
	Eid       string `protobuf:"bytes,13,opt,name=eid,proto3" json:"eid,omitempty"`
}

func (x *RecycleHistoryInfo) Reset() {
	*x = RecycleHistoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleHistoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleHistoryInfo) ProtoMessage() {}

func (x *RecycleHistoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleHistoryInfo.ProtoReflect.Descriptor instead.
func (*RecycleHistoryInfo) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{16}
}

func (x *RecycleHistoryInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecycleHistoryInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RecycleHistoryInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RecycleHistoryInfo) GetSrcPath() string {
	if x != nil {
		return x.SrcPath
	}
	return ""
}

func (x *RecycleHistoryInfo) GetDesPath() string {
	if x != nil {
		return x.DesPath
	}
	return ""
}

func (x *RecycleHistoryInfo) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RecycleHistoryInfo) GetSucceed() uint64 {
	if x != nil {
		return x.Succeed
	}
	return 0
}

func (x *RecycleHistoryInfo) GetFailed() uint64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *RecycleHistoryInfo) GetBeginTime() uint64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *RecycleHistoryInfo) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RecycleHistoryInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RecycleHistoryInfo) GetMdsId() uint32 {
	if x != nil {
		return x.MdsId
	}
	return 0
}

func (x *RecycleHistoryInfo) GetEid() string {
	if x != nil {
		return x.Eid
	}
	return ""
}

// message for rpc show mission history
type ShowHistoryOfRecycleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// if true, will return mission infilght or pending,
	// otherwise, return mission already completed
	IsInflight bool   `protobuf:"varint,1,opt,name=is_inflight,json=isInflight,proto3" json:"is_inflight,omitempty"`
	Id         uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ShowHistoryOfRecycleRequest) Reset() {
	*x = ShowHistoryOfRecycleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowHistoryOfRecycleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowHistoryOfRecycleRequest) ProtoMessage() {}

func (x *ShowHistoryOfRecycleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowHistoryOfRecycleRequest.ProtoReflect.Descriptor instead.
func (*ShowHistoryOfRecycleRequest) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{17}
}

func (x *ShowHistoryOfRecycleRequest) GetIsInflight() bool {
	if x != nil {
		return x.IsInflight
	}
	return false
}

func (x *ShowHistoryOfRecycleRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ShowHistoryOfRecycleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *proto.ResMes         `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	HistoryInfo []*RecycleHistoryInfo `protobuf:"bytes,2,rep,name=history_info,json=historyInfo,proto3" json:"history_info,omitempty"`
}

func (x *ShowHistoryOfRecycleResponse) Reset() {
	*x = ShowHistoryOfRecycleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowHistoryOfRecycleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowHistoryOfRecycleResponse) ProtoMessage() {}

func (x *ShowHistoryOfRecycleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowHistoryOfRecycleResponse.ProtoReflect.Descriptor instead.
func (*ShowHistoryOfRecycleResponse) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{18}
}

func (x *ShowHistoryOfRecycleResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ShowHistoryOfRecycleResponse) GetHistoryInfo() []*RecycleHistoryInfo {
	if x != nil {
		return x.HistoryInfo
	}
	return nil
}

// message for rpc stop mission
type StopMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdOfMission uint32 `protobuf:"varint,1,opt,name=id_of_mission,json=idOfMission,proto3" json:"id_of_mission,omitempty"`
}

func (x *StopMissionRequest) Reset() {
	*x = StopMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopMissionRequest) ProtoMessage() {}

func (x *StopMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopMissionRequest.ProtoReflect.Descriptor instead.
func (*StopMissionRequest) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{19}
}

func (x *StopMissionRequest) GetIdOfMission() uint32 {
	if x != nil {
		return x.IdOfMission
	}
	return 0
}

type StopMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *StopMissionResponse) Reset() {
	*x = StopMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recycle_proto_recycle_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopMissionResponse) ProtoMessage() {}

func (x *StopMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recycle_proto_recycle_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopMissionResponse.ProtoReflect.Descriptor instead.
func (*StopMissionResponse) Descriptor() ([]byte, []int) {
	return file_recycle_proto_recycle_proto_rawDescGZIP(), []int{20}
}

func (x *StopMissionResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_recycle_proto_recycle_proto protoreflect.FileDescriptor

var file_recycle_proto_recycle_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x59,
	0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x71, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x61, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x22, 0x35, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x38, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65,
	0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x5f, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74, 0x75, 0x72,
	0x6e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x4f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc4,
	0x01, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6d, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x4d, 0x64, 0x73, 0x49, 0x64, 0x22, 0xa7, 0x02, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x4a, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x50, 0x41, 0x47, 0x45,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x45, 0x56, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x10, 0x03, 0x22,
	0x85, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x52,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x46, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x59, 0x72, 0x63,
	0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6c, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6d, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x4d, 0x64, 0x73, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52,
	0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6b, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x6d, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4d, 0x64, 0x73, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xc3, 0x02, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x65, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x15,
	0x0a, 0x06, 0x6d, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6d, 0x64, 0x73, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x1b, 0x53, 0x68, 0x6f, 0x77, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x66,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x49,
	0x6e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x1c, 0x53, 0x68, 0x6f, 0x77,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65,
	0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x38, 0x0a, 0x12, 0x53,
	0x74, 0x6f, 0x70, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x64, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x64, 0x4f, 0x66, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52,
	0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x8f, 0x06,
	0x0a, 0x07, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x1f, 0x2e,
	0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49,
	0x6e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e,
	0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x77, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x59,
	0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x68, 0x6f, 0x77, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x52, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x2c, 0x5a, 0x2a, 0x79, 0x72, 0x63, 0x66, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x61, 0x73,
	0x65, 0x2f, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x3b, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recycle_proto_recycle_proto_rawDescOnce sync.Once
	file_recycle_proto_recycle_proto_rawDescData = file_recycle_proto_recycle_proto_rawDesc
)

func file_recycle_proto_recycle_proto_rawDescGZIP() []byte {
	file_recycle_proto_recycle_proto_rawDescOnce.Do(func() {
		file_recycle_proto_recycle_proto_rawDescData = protoimpl.X.CompressGZIP(file_recycle_proto_recycle_proto_rawDescData)
	})
	return file_recycle_proto_recycle_proto_rawDescData
}

var file_recycle_proto_recycle_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_recycle_proto_recycle_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_recycle_proto_recycle_proto_goTypes = []any{
	(ListFilesInRecycleRequest_ListMode)(0), // 0: YrcfAgent.ListFilesInRecycleRequest.ListMode
	(*RecycleInfo)(nil),                     // 1: YrcfAgent.RecycleInfo
	(*ListRecycleRequest)(nil),              // 2: YrcfAgent.ListRecycleRequest
	(*ListRecycleResponse)(nil),             // 3: YrcfAgent.ListRecycleResponse
	(*AddRecycleRequest)(nil),               // 4: YrcfAgent.AddRecycleRequest
	(*AddRecycleResponse)(nil),              // 5: YrcfAgent.AddRecycleResponse
	(*DeleteRecycleRequest)(nil),            // 6: YrcfAgent.DeleteRecycleRequest
	(*DeleteRecycleResponse)(nil),           // 7: YrcfAgent.DeleteRecycleResponse
	(*UpdateRecycleRequest)(nil),            // 8: YrcfAgent.UpdateRecycleRequest
	(*UpdateRecycleResponse)(nil),           // 9: YrcfAgent.UpdateRecycleResponse
	(*RecycleFileInfo)(nil),                 // 10: YrcfAgent.RecycleFileInfo
	(*ListFilesInRecycleRequest)(nil),       // 11: YrcfAgent.ListFilesInRecycleRequest
	(*ListFilesInRecycleResponse)(nil),      // 12: YrcfAgent.ListFilesInRecycleResponse
	(*RecycleFileRequest)(nil),              // 13: YrcfAgent.RecycleFileRequest
	(*RecycleFileResponse)(nil),             // 14: YrcfAgent.RecycleFileResponse
	(*DeleteFileRequest)(nil),               // 15: YrcfAgent.DeleteFileRequest
	(*DeleteFileResponse)(nil),              // 16: YrcfAgent.DeleteFileResponse
	(*RecycleHistoryInfo)(nil),              // 17: YrcfAgent.RecycleHistoryInfo
	(*ShowHistoryOfRecycleRequest)(nil),     // 18: YrcfAgent.ShowHistoryOfRecycleRequest
	(*ShowHistoryOfRecycleResponse)(nil),    // 19: YrcfAgent.ShowHistoryOfRecycleResponse
	(*StopMissionRequest)(nil),              // 20: YrcfAgent.StopMissionRequest
	(*StopMissionResponse)(nil),             // 21: YrcfAgent.StopMissionResponse
	(*proto.ResMes)(nil),                    // 22: ResMes
}
var file_recycle_proto_recycle_proto_depIdxs = []int32{
	22, // 0: YrcfAgent.ListRecycleResponse.result:type_name -> ResMes
	1,  // 1: YrcfAgent.ListRecycleResponse.recycle_info:type_name -> YrcfAgent.RecycleInfo
	22, // 2: YrcfAgent.AddRecycleResponse.result:type_name -> ResMes
	22, // 3: YrcfAgent.DeleteRecycleResponse.result:type_name -> ResMes
	22, // 4: YrcfAgent.UpdateRecycleResponse.result:type_name -> ResMes
	0,  // 5: YrcfAgent.ListFilesInRecycleRequest.list_mode:type_name -> YrcfAgent.ListFilesInRecycleRequest.ListMode
	22, // 6: YrcfAgent.ListFilesInRecycleResponse.result:type_name -> ResMes
	10, // 7: YrcfAgent.ListFilesInRecycleResponse.recycle_file_info:type_name -> YrcfAgent.RecycleFileInfo
	22, // 8: YrcfAgent.RecycleFileResponse.result:type_name -> ResMes
	22, // 9: YrcfAgent.DeleteFileResponse.result:type_name -> ResMes
	22, // 10: YrcfAgent.ShowHistoryOfRecycleResponse.result:type_name -> ResMes
	17, // 11: YrcfAgent.ShowHistoryOfRecycleResponse.history_info:type_name -> YrcfAgent.RecycleHistoryInfo
	22, // 12: YrcfAgent.StopMissionResponse.result:type_name -> ResMes
	2,  // 13: YrcfAgent.Recycle.ListRecycle:input_type -> YrcfAgent.ListRecycleRequest
	4,  // 14: YrcfAgent.Recycle.AddRecycle:input_type -> YrcfAgent.AddRecycleRequest
	6,  // 15: YrcfAgent.Recycle.DeleteRecycle:input_type -> YrcfAgent.DeleteRecycleRequest
	8,  // 16: YrcfAgent.Recycle.UpdateRecycle:input_type -> YrcfAgent.UpdateRecycleRequest
	11, // 17: YrcfAgent.Recycle.ListFilesInRecycle:input_type -> YrcfAgent.ListFilesInRecycleRequest
	13, // 18: YrcfAgent.Recycle.RecycleFile:input_type -> YrcfAgent.RecycleFileRequest
	15, // 19: YrcfAgent.Recycle.DeleteFile:input_type -> YrcfAgent.DeleteFileRequest
	18, // 20: YrcfAgent.Recycle.ShowHistoryOfRecycle:input_type -> YrcfAgent.ShowHistoryOfRecycleRequest
	20, // 21: YrcfAgent.Recycle.StopMission:input_type -> YrcfAgent.StopMissionRequest
	3,  // 22: YrcfAgent.Recycle.ListRecycle:output_type -> YrcfAgent.ListRecycleResponse
	5,  // 23: YrcfAgent.Recycle.AddRecycle:output_type -> YrcfAgent.AddRecycleResponse
	7,  // 24: YrcfAgent.Recycle.DeleteRecycle:output_type -> YrcfAgent.DeleteRecycleResponse
	9,  // 25: YrcfAgent.Recycle.UpdateRecycle:output_type -> YrcfAgent.UpdateRecycleResponse
	12, // 26: YrcfAgent.Recycle.ListFilesInRecycle:output_type -> YrcfAgent.ListFilesInRecycleResponse
	14, // 27: YrcfAgent.Recycle.RecycleFile:output_type -> YrcfAgent.RecycleFileResponse
	16, // 28: YrcfAgent.Recycle.DeleteFile:output_type -> YrcfAgent.DeleteFileResponse
	19, // 29: YrcfAgent.Recycle.ShowHistoryOfRecycle:output_type -> YrcfAgent.ShowHistoryOfRecycleResponse
	21, // 30: YrcfAgent.Recycle.StopMission:output_type -> YrcfAgent.StopMissionResponse
	22, // [22:31] is the sub-list for method output_type
	13, // [13:22] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_recycle_proto_recycle_proto_init() }
func file_recycle_proto_recycle_proto_init() {
	if File_recycle_proto_recycle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recycle_proto_recycle_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RecycleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListRecycleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListRecycleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AddRecycleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AddRecycleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRecycleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRecycleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRecycleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRecycleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*RecycleFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ListFilesInRecycleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ListFilesInRecycleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*RecycleFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RecycleFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*RecycleHistoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ShowHistoryOfRecycleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ShowHistoryOfRecycleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*StopMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recycle_proto_recycle_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*StopMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recycle_proto_recycle_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recycle_proto_recycle_proto_goTypes,
		DependencyIndexes: file_recycle_proto_recycle_proto_depIdxs,
		EnumInfos:         file_recycle_proto_recycle_proto_enumTypes,
		MessageInfos:      file_recycle_proto_recycle_proto_msgTypes,
	}.Build()
	File_recycle_proto_recycle_proto = out.File
	file_recycle_proto_recycle_proto_rawDesc = nil
	file_recycle_proto_recycle_proto_goTypes = nil
	file_recycle_proto_recycle_proto_depIdxs = nil
}
