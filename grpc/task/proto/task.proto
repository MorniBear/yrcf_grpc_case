syntax = "proto3";
import "response.proto";
package YrcfAgent;
option go_package = "yrcf_grpc_case/grpc/task/proto/;task";
enum TaskOp {
    OP_UNKNOW = 0;
    kPreLoad  = 1;
}

enum TaskType {
    TYPE_UNKNOW = 0;
    kBucketlink = 1;
    kTiering = 2;
}

message TaskInfo {
    uint64 id = 1;
    uint32 load_id = 2;
    uint32 agent_id = 3;
    string status = 4;
    string op = 5;
    string path = 6;
    uint32 threads = 7;
    string type = 8;
    uint32 code_ver = 9;
    TaskProgress progress = 12;
}

message CreateTaskRequest {
    uint32 load_id = 1;
    TaskType type = 2;
    TaskOp op = 3;
    string path = 4;
    bool use_mount_path = 5;
    uint32 threads = 6;
}

message TaskProgress {
    uint64 total = 1;
    uint64 failed = 2;
    uint64 success = 3;
    string start = 4;
    string end = 5;
}

message CreateTaskResponse {
    ResMes result = 1;
}

message ListTaskRequest {
    uint32 load_id = 1;
    TaskType type = 2;
}
message ListTaskResponse {
    ResMes result = 1;
    map <uint64, TaskInfo> task_map = 2;
}

message AbortTaskRequest {
    uint64 id = 1;
    TaskType type = 2;
}
message AbortTaskResponse {
    ResMes result = 1;
}

message DeleteTaskRequest {
    uint64 id = 1;
    TaskType type = 2;
}
message DeleteTaskResponse {
    ResMes result = 1;
}

service Task {
    rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse) {}
    rpc ListTask(ListTaskRequest) returns (ListTaskResponse) {}
    rpc AbortTask(AbortTaskRequest) returns (AbortTaskResponse) {}
    rpc DeleteTask(DeleteTaskRequest) returns (DeleteTaskResponse) {}
}
