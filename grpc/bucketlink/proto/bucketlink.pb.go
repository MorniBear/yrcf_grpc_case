// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: bucketlink/proto/bucketlink.proto

package bucketlink

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	proto "yrcf_grpc_case/grpc/common/proto/"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImportConfig_Scope int32

const (
	ImportConfig_IMPORT_ALL          ImportConfig_Scope = 0
	ImportConfig_IMPORT_NAME_MATCH   ImportConfig_Scope = 1
	ImportConfig_IMPORT_PREFIX_MATCH ImportConfig_Scope = 2
	ImportConfig_IMPORT_NONE         ImportConfig_Scope = 3
)

// Enum value maps for ImportConfig_Scope.
var (
	ImportConfig_Scope_name = map[int32]string{
		0: "IMPORT_ALL",
		1: "IMPORT_NAME_MATCH",
		2: "IMPORT_PREFIX_MATCH",
		3: "IMPORT_NONE",
	}
	ImportConfig_Scope_value = map[string]int32{
		"IMPORT_ALL":          0,
		"IMPORT_NAME_MATCH":   1,
		"IMPORT_PREFIX_MATCH": 2,
		"IMPORT_NONE":         3,
	}
)

func (x ImportConfig_Scope) Enum() *ImportConfig_Scope {
	p := new(ImportConfig_Scope)
	*p = x
	return p
}

func (x ImportConfig_Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImportConfig_Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_bucketlink_proto_bucketlink_proto_enumTypes[0].Descriptor()
}

func (ImportConfig_Scope) Type() protoreflect.EnumType {
	return &file_bucketlink_proto_bucketlink_proto_enumTypes[0]
}

func (x ImportConfig_Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImportConfig_Scope.Descriptor instead.
func (ImportConfig_Scope) EnumDescriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{0, 0}
}

type ImportConfig_LoadType int32

const (
	ImportConfig_LOAD_META       ImportConfig_LoadType = 0
	ImportConfig_LOAD_META_DATA  ImportConfig_LoadType = 1
	ImportConfig_LOAD_DATA_ASYNC ImportConfig_LoadType = 2
)

// Enum value maps for ImportConfig_LoadType.
var (
	ImportConfig_LoadType_name = map[int32]string{
		0: "LOAD_META",
		1: "LOAD_META_DATA",
		2: "LOAD_DATA_ASYNC",
	}
	ImportConfig_LoadType_value = map[string]int32{
		"LOAD_META":       0,
		"LOAD_META_DATA":  1,
		"LOAD_DATA_ASYNC": 2,
	}
)

func (x ImportConfig_LoadType) Enum() *ImportConfig_LoadType {
	p := new(ImportConfig_LoadType)
	*p = x
	return p
}

func (x ImportConfig_LoadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImportConfig_LoadType) Descriptor() protoreflect.EnumDescriptor {
	return file_bucketlink_proto_bucketlink_proto_enumTypes[1].Descriptor()
}

func (ImportConfig_LoadType) Type() protoreflect.EnumType {
	return &file_bucketlink_proto_bucketlink_proto_enumTypes[1]
}

func (x ImportConfig_LoadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImportConfig_LoadType.Descriptor instead.
func (ImportConfig_LoadType) EnumDescriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{0, 1}
}

type ExportConfig_Scope int32

const (
	ExportConfig_EXPORT_DIRTY              ExportConfig_Scope = 0
	ExportConfig_EXPORT_NONE               ExportConfig_Scope = 1
	ExportConfig_EXPORT_ALL                ExportConfig_Scope = 2
	ExportConfig_EXPORT_NAME_MATCH         ExportConfig_Scope = 3
	ExportConfig_EXPORT_PREFIX_MATCH       ExportConfig_Scope = 4
	ExportConfig_EXPORT_DIRTY_NAME_MATCH   ExportConfig_Scope = 5
	ExportConfig_EXPORT_DIRTY_PREFIX_MATCH ExportConfig_Scope = 6
)

// Enum value maps for ExportConfig_Scope.
var (
	ExportConfig_Scope_name = map[int32]string{
		0: "EXPORT_DIRTY",
		1: "EXPORT_NONE",
		2: "EXPORT_ALL",
		3: "EXPORT_NAME_MATCH",
		4: "EXPORT_PREFIX_MATCH",
		5: "EXPORT_DIRTY_NAME_MATCH",
		6: "EXPORT_DIRTY_PREFIX_MATCH",
	}
	ExportConfig_Scope_value = map[string]int32{
		"EXPORT_DIRTY":              0,
		"EXPORT_NONE":               1,
		"EXPORT_ALL":                2,
		"EXPORT_NAME_MATCH":         3,
		"EXPORT_PREFIX_MATCH":       4,
		"EXPORT_DIRTY_NAME_MATCH":   5,
		"EXPORT_DIRTY_PREFIX_MATCH": 6,
	}
)

func (x ExportConfig_Scope) Enum() *ExportConfig_Scope {
	p := new(ExportConfig_Scope)
	*p = x
	return p
}

func (x ExportConfig_Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportConfig_Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_bucketlink_proto_bucketlink_proto_enumTypes[2].Descriptor()
}

func (ExportConfig_Scope) Type() protoreflect.EnumType {
	return &file_bucketlink_proto_bucketlink_proto_enumTypes[2]
}

func (x ExportConfig_Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportConfig_Scope.Descriptor instead.
func (ExportConfig_Scope) EnumDescriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{1, 0}
}

type ExportConfig_NameRule int32

const (
	ExportConfig_USE_ORIGIN ExportConfig_NameRule = 0
	ExportConfig_ADD_SUFFIX ExportConfig_NameRule = 1
)

// Enum value maps for ExportConfig_NameRule.
var (
	ExportConfig_NameRule_name = map[int32]string{
		0: "USE_ORIGIN",
		1: "ADD_SUFFIX",
	}
	ExportConfig_NameRule_value = map[string]int32{
		"USE_ORIGIN": 0,
		"ADD_SUFFIX": 1,
	}
)

func (x ExportConfig_NameRule) Enum() *ExportConfig_NameRule {
	p := new(ExportConfig_NameRule)
	*p = x
	return p
}

func (x ExportConfig_NameRule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportConfig_NameRule) Descriptor() protoreflect.EnumDescriptor {
	return file_bucketlink_proto_bucketlink_proto_enumTypes[3].Descriptor()
}

func (ExportConfig_NameRule) Type() protoreflect.EnumType {
	return &file_bucketlink_proto_bucketlink_proto_enumTypes[3]
}

func (x ExportConfig_NameRule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportConfig_NameRule.Descriptor instead.
func (ExportConfig_NameRule) EnumDescriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{1, 1}
}

type ExportConfig_PurgeTiming int32

const (
	ExportConfig_AFTER_EXPORT ExportConfig_PurgeTiming = 0
)

// Enum value maps for ExportConfig_PurgeTiming.
var (
	ExportConfig_PurgeTiming_name = map[int32]string{
		0: "AFTER_EXPORT",
	}
	ExportConfig_PurgeTiming_value = map[string]int32{
		"AFTER_EXPORT": 0,
	}
)

func (x ExportConfig_PurgeTiming) Enum() *ExportConfig_PurgeTiming {
	p := new(ExportConfig_PurgeTiming)
	*p = x
	return p
}

func (x ExportConfig_PurgeTiming) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportConfig_PurgeTiming) Descriptor() protoreflect.EnumDescriptor {
	return file_bucketlink_proto_bucketlink_proto_enumTypes[4].Descriptor()
}

func (ExportConfig_PurgeTiming) Type() protoreflect.EnumType {
	return &file_bucketlink_proto_bucketlink_proto_enumTypes[4]
}

func (x ExportConfig_PurgeTiming) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportConfig_PurgeTiming.Descriptor instead.
func (ExportConfig_PurgeTiming) EnumDescriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{1, 2}
}

type ExportConfig_ETagScope int32

const (
	ExportConfig_DONT_CHECK_ETAG ExportConfig_ETagScope = 0
	ExportConfig_CHECK_ETAG      ExportConfig_ETagScope = 1
)

// Enum value maps for ExportConfig_ETagScope.
var (
	ExportConfig_ETagScope_name = map[int32]string{
		0: "DONT_CHECK_ETAG",
		1: "CHECK_ETAG",
	}
	ExportConfig_ETagScope_value = map[string]int32{
		"DONT_CHECK_ETAG": 0,
		"CHECK_ETAG":      1,
	}
)

func (x ExportConfig_ETagScope) Enum() *ExportConfig_ETagScope {
	p := new(ExportConfig_ETagScope)
	*p = x
	return p
}

func (x ExportConfig_ETagScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportConfig_ETagScope) Descriptor() protoreflect.EnumDescriptor {
	return file_bucketlink_proto_bucketlink_proto_enumTypes[5].Descriptor()
}

func (ExportConfig_ETagScope) Type() protoreflect.EnumType {
	return &file_bucketlink_proto_bucketlink_proto_enumTypes[5]
}

func (x ExportConfig_ETagScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportConfig_ETagScope.Descriptor instead.
func (ExportConfig_ETagScope) EnumDescriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{1, 3}
}

type SubscribeConfig_S3Type int32

const (
	SubscribeConfig_UNSET SubscribeConfig_S3Type = 0
	SubscribeConfig_ALI   SubscribeConfig_S3Type = 1
	SubscribeConfig_BAIDU SubscribeConfig_S3Type = 2
	SubscribeConfig_CEPH  SubscribeConfig_S3Type = 3
)

// Enum value maps for SubscribeConfig_S3Type.
var (
	SubscribeConfig_S3Type_name = map[int32]string{
		0: "UNSET",
		1: "ALI",
		2: "BAIDU",
		3: "CEPH",
	}
	SubscribeConfig_S3Type_value = map[string]int32{
		"UNSET": 0,
		"ALI":   1,
		"BAIDU": 2,
		"CEPH":  3,
	}
)

func (x SubscribeConfig_S3Type) Enum() *SubscribeConfig_S3Type {
	p := new(SubscribeConfig_S3Type)
	*p = x
	return p
}

func (x SubscribeConfig_S3Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscribeConfig_S3Type) Descriptor() protoreflect.EnumDescriptor {
	return file_bucketlink_proto_bucketlink_proto_enumTypes[6].Descriptor()
}

func (SubscribeConfig_S3Type) Type() protoreflect.EnumType {
	return &file_bucketlink_proto_bucketlink_proto_enumTypes[6]
}

func (x SubscribeConfig_S3Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscribeConfig_S3Type.Descriptor instead.
func (SubscribeConfig_S3Type) EnumDescriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{2, 0}
}

type BucketLinkSubscribeOpsRequest_SubOp int32

const (
	BucketLinkSubscribeOpsRequest_SUBSCRIBE   BucketLinkSubscribeOpsRequest_SubOp = 0
	BucketLinkSubscribeOpsRequest_UNSUBSCRIBE BucketLinkSubscribeOpsRequest_SubOp = 1
)

// Enum value maps for BucketLinkSubscribeOpsRequest_SubOp.
var (
	BucketLinkSubscribeOpsRequest_SubOp_name = map[int32]string{
		0: "SUBSCRIBE",
		1: "UNSUBSCRIBE",
	}
	BucketLinkSubscribeOpsRequest_SubOp_value = map[string]int32{
		"SUBSCRIBE":   0,
		"UNSUBSCRIBE": 1,
	}
)

func (x BucketLinkSubscribeOpsRequest_SubOp) Enum() *BucketLinkSubscribeOpsRequest_SubOp {
	p := new(BucketLinkSubscribeOpsRequest_SubOp)
	*p = x
	return p
}

func (x BucketLinkSubscribeOpsRequest_SubOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BucketLinkSubscribeOpsRequest_SubOp) Descriptor() protoreflect.EnumDescriptor {
	return file_bucketlink_proto_bucketlink_proto_enumTypes[7].Descriptor()
}

func (BucketLinkSubscribeOpsRequest_SubOp) Type() protoreflect.EnumType {
	return &file_bucketlink_proto_bucketlink_proto_enumTypes[7]
}

func (x BucketLinkSubscribeOpsRequest_SubOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BucketLinkSubscribeOpsRequest_SubOp.Descriptor instead.
func (BucketLinkSubscribeOpsRequest_SubOp) EnumDescriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{19, 0}
}

type ShowBucketLinkHistoryRequest_ShowType int32

const (
	ShowBucketLinkHistoryRequest_IMPORT ShowBucketLinkHistoryRequest_ShowType = 0
	ShowBucketLinkHistoryRequest_EXPORT ShowBucketLinkHistoryRequest_ShowType = 1
)

// Enum value maps for ShowBucketLinkHistoryRequest_ShowType.
var (
	ShowBucketLinkHistoryRequest_ShowType_name = map[int32]string{
		0: "IMPORT",
		1: "EXPORT",
	}
	ShowBucketLinkHistoryRequest_ShowType_value = map[string]int32{
		"IMPORT": 0,
		"EXPORT": 1,
	}
)

func (x ShowBucketLinkHistoryRequest_ShowType) Enum() *ShowBucketLinkHistoryRequest_ShowType {
	p := new(ShowBucketLinkHistoryRequest_ShowType)
	*p = x
	return p
}

func (x ShowBucketLinkHistoryRequest_ShowType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShowBucketLinkHistoryRequest_ShowType) Descriptor() protoreflect.EnumDescriptor {
	return file_bucketlink_proto_bucketlink_proto_enumTypes[8].Descriptor()
}

func (ShowBucketLinkHistoryRequest_ShowType) Type() protoreflect.EnumType {
	return &file_bucketlink_proto_bucketlink_proto_enumTypes[8]
}

func (x ShowBucketLinkHistoryRequest_ShowType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShowBucketLinkHistoryRequest_ShowType.Descriptor instead.
func (ShowBucketLinkHistoryRequest_ShowType) EnumDescriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{23, 0}
}

type HotLayerCleanupOpsRequest_HotLayerCleanupOp int32

const (
	HotLayerCleanupOpsRequest_UPDATE_CLEANUP_RULES HotLayerCleanupOpsRequest_HotLayerCleanupOp = 0
	HotLayerCleanupOpsRequest_TRIGGER_CLEANUP      HotLayerCleanupOpsRequest_HotLayerCleanupOp = 1
)

// Enum value maps for HotLayerCleanupOpsRequest_HotLayerCleanupOp.
var (
	HotLayerCleanupOpsRequest_HotLayerCleanupOp_name = map[int32]string{
		0: "UPDATE_CLEANUP_RULES",
		1: "TRIGGER_CLEANUP",
	}
	HotLayerCleanupOpsRequest_HotLayerCleanupOp_value = map[string]int32{
		"UPDATE_CLEANUP_RULES": 0,
		"TRIGGER_CLEANUP":      1,
	}
)

func (x HotLayerCleanupOpsRequest_HotLayerCleanupOp) Enum() *HotLayerCleanupOpsRequest_HotLayerCleanupOp {
	p := new(HotLayerCleanupOpsRequest_HotLayerCleanupOp)
	*p = x
	return p
}

func (x HotLayerCleanupOpsRequest_HotLayerCleanupOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HotLayerCleanupOpsRequest_HotLayerCleanupOp) Descriptor() protoreflect.EnumDescriptor {
	return file_bucketlink_proto_bucketlink_proto_enumTypes[9].Descriptor()
}

func (HotLayerCleanupOpsRequest_HotLayerCleanupOp) Type() protoreflect.EnumType {
	return &file_bucketlink_proto_bucketlink_proto_enumTypes[9]
}

func (x HotLayerCleanupOpsRequest_HotLayerCleanupOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HotLayerCleanupOpsRequest_HotLayerCleanupOp.Descriptor instead.
func (HotLayerCleanupOpsRequest_HotLayerCleanupOp) EnumDescriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{25, 0}
}

type ImportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope    ImportConfig_Scope    `protobuf:"varint,1,opt,name=scope,proto3,enum=YrcfAgent.ImportConfig_Scope" json:"scope,omitempty"`
	Pattern  string                `protobuf:"bytes,2,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Prefix   string                `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`
	LoadType ImportConfig_LoadType `protobuf:"varint,4,opt,name=load_type,json=loadType,proto3,enum=YrcfAgent.ImportConfig_LoadType" json:"load_type,omitempty"`
	// set threads for link import, if not set,
	// will be set as default numeration
	Threads uint32 `protobuf:"varint,5,opt,name=threads,proto3" json:"threads,omitempty"`
	// if true, import will list all objects no matter link is
	// imported or not
	ImportAll bool `protobuf:"varint,6,opt,name=import_all,json=importAll,proto3" json:"import_all,omitempty"`
}

func (x *ImportConfig) Reset() {
	*x = ImportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportConfig) ProtoMessage() {}

func (x *ImportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportConfig.ProtoReflect.Descriptor instead.
func (*ImportConfig) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{0}
}

func (x *ImportConfig) GetScope() ImportConfig_Scope {
	if x != nil {
		return x.Scope
	}
	return ImportConfig_IMPORT_ALL
}

func (x *ImportConfig) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *ImportConfig) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ImportConfig) GetLoadType() ImportConfig_LoadType {
	if x != nil {
		return x.LoadType
	}
	return ImportConfig_LOAD_META
}

func (x *ImportConfig) GetThreads() uint32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *ImportConfig) GetImportAll() bool {
	if x != nil {
		return x.ImportAll
	}
	return false
}

type ExportConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketId    uint32                   `protobuf:"varint,1,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	Scope       ExportConfig_Scope       `protobuf:"varint,2,opt,name=scope,proto3,enum=YrcfAgent.ExportConfig_Scope" json:"scope,omitempty"`
	Pattern     string                   `protobuf:"bytes,3,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Prefix      string                   `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`
	NameRule    ExportConfig_NameRule    `protobuf:"varint,5,opt,name=name_rule,json=nameRule,proto3,enum=YrcfAgent.ExportConfig_NameRule" json:"name_rule,omitempty"`
	NameSuffix  string                   `protobuf:"bytes,6,opt,name=name_suffix,json=nameSuffix,proto3" json:"name_suffix,omitempty"`
	WillPurge   bool                     `protobuf:"varint,7,opt,name=will_purge,json=willPurge,proto3" json:"will_purge,omitempty"`
	PurgeTiming ExportConfig_PurgeTiming `protobuf:"varint,8,opt,name=purge_timing,json=purgeTiming,proto3,enum=YrcfAgent.ExportConfig_PurgeTiming" json:"purge_timing,omitempty"`
	Threads     uint32                   `protobuf:"varint,9,opt,name=threads,proto3" json:"threads,omitempty"`
	EtagScope   ExportConfig_ETagScope   `protobuf:"varint,10,opt,name=etag_scope,json=etagScope,proto3,enum=YrcfAgent.ExportConfig_ETagScope" json:"etag_scope,omitempty"`
}

func (x *ExportConfig) Reset() {
	*x = ExportConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportConfig) ProtoMessage() {}

func (x *ExportConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportConfig.ProtoReflect.Descriptor instead.
func (*ExportConfig) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{1}
}

func (x *ExportConfig) GetBucketId() uint32 {
	if x != nil {
		return x.BucketId
	}
	return 0
}

func (x *ExportConfig) GetScope() ExportConfig_Scope {
	if x != nil {
		return x.Scope
	}
	return ExportConfig_EXPORT_DIRTY
}

func (x *ExportConfig) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *ExportConfig) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ExportConfig) GetNameRule() ExportConfig_NameRule {
	if x != nil {
		return x.NameRule
	}
	return ExportConfig_USE_ORIGIN
}

func (x *ExportConfig) GetNameSuffix() string {
	if x != nil {
		return x.NameSuffix
	}
	return ""
}

func (x *ExportConfig) GetWillPurge() bool {
	if x != nil {
		return x.WillPurge
	}
	return false
}

func (x *ExportConfig) GetPurgeTiming() ExportConfig_PurgeTiming {
	if x != nil {
		return x.PurgeTiming
	}
	return ExportConfig_AFTER_EXPORT
}

func (x *ExportConfig) GetThreads() uint32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *ExportConfig) GetEtagScope() ExportConfig_ETagScope {
	if x != nil {
		return x.EtagScope
	}
	return ExportConfig_DONT_CHECK_ETAG
}

type SubscribeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S3Type         SubscribeConfig_S3Type `protobuf:"varint,1,opt,name=s3_type,json=s3Type,proto3,enum=YrcfAgent.SubscribeConfig_S3Type" json:"s3_type,omitempty"`
	Prefix         string                 `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	SubWithoutTest bool                   `protobuf:"varint,3,opt,name=sub_without_test,json=subWithoutTest,proto3" json:"sub_without_test,omitempty"`
}

func (x *SubscribeConfig) Reset() {
	*x = SubscribeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeConfig) ProtoMessage() {}

func (x *SubscribeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeConfig.ProtoReflect.Descriptor instead.
func (*SubscribeConfig) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeConfig) GetS3Type() SubscribeConfig_S3Type {
	if x != nil {
		return x.S3Type
	}
	return SubscribeConfig_UNSET
}

func (x *SubscribeConfig) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *SubscribeConfig) GetSubWithoutTest() bool {
	if x != nil {
		return x.SubWithoutTest
	}
	return false
}

type HotLayerCleanupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColdTime     uint64 `protobuf:"varint,1,opt,name=cold_time,json=coldTime,proto3" json:"cold_time,omitempty"`
	CleanupTimer string `protobuf:"bytes,2,opt,name=cleanup_timer,json=cleanupTimer,proto3" json:"cleanup_timer,omitempty"`
}

func (x *HotLayerCleanupInfo) Reset() {
	*x = HotLayerCleanupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotLayerCleanupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotLayerCleanupInfo) ProtoMessage() {}

func (x *HotLayerCleanupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotLayerCleanupInfo.ProtoReflect.Descriptor instead.
func (*HotLayerCleanupInfo) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{3}
}

func (x *HotLayerCleanupInfo) GetColdTime() uint64 {
	if x != nil {
		return x.ColdTime
	}
	return 0
}

func (x *HotLayerCleanupInfo) GetCleanupTimer() string {
	if x != nil {
		return x.CleanupTimer
	}
	return ""
}

type BucketLinkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkId              uint32               `protobuf:"varint,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	State               string               `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	RootDir             string               `protobuf:"bytes,3,opt,name=root_dir,json=rootDir,proto3" json:"root_dir,omitempty"`
	AgentId             uint32               `protobuf:"varint,4,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	BucketId            uint32               `protobuf:"varint,5,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	ImportConfig        *ImportConfig        `protobuf:"bytes,6,opt,name=import_config,json=importConfig,proto3" json:"import_config,omitempty"`
	ExportConfig        *ExportConfig        `protobuf:"bytes,7,opt,name=export_config,json=exportConfig,proto3" json:"export_config,omitempty"`
	SubConfig           *SubscribeConfig     `protobuf:"bytes,8,opt,name=sub_config,json=subConfig,proto3" json:"sub_config,omitempty"`
	SubState            string               `protobuf:"bytes,9,opt,name=sub_state,json=subState,proto3" json:"sub_state,omitempty"`
	HotLayerCleanupInfo *HotLayerCleanupInfo `protobuf:"bytes,10,opt,name=hot_layer_cleanup_info,json=hotLayerCleanupInfo,proto3" json:"hot_layer_cleanup_info,omitempty"`
}

func (x *BucketLinkInfo) Reset() {
	*x = BucketLinkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketLinkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketLinkInfo) ProtoMessage() {}

func (x *BucketLinkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketLinkInfo.ProtoReflect.Descriptor instead.
func (*BucketLinkInfo) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{4}
}

func (x *BucketLinkInfo) GetLinkId() uint32 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

func (x *BucketLinkInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *BucketLinkInfo) GetRootDir() string {
	if x != nil {
		return x.RootDir
	}
	return ""
}

func (x *BucketLinkInfo) GetAgentId() uint32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *BucketLinkInfo) GetBucketId() uint32 {
	if x != nil {
		return x.BucketId
	}
	return 0
}

func (x *BucketLinkInfo) GetImportConfig() *ImportConfig {
	if x != nil {
		return x.ImportConfig
	}
	return nil
}

func (x *BucketLinkInfo) GetExportConfig() *ExportConfig {
	if x != nil {
		return x.ExportConfig
	}
	return nil
}

func (x *BucketLinkInfo) GetSubConfig() *SubscribeConfig {
	if x != nil {
		return x.SubConfig
	}
	return nil
}

func (x *BucketLinkInfo) GetSubState() string {
	if x != nil {
		return x.SubState
	}
	return ""
}

func (x *BucketLinkInfo) GetHotLayerCleanupInfo() *HotLayerCleanupInfo {
	if x != nil {
		return x.HotLayerCleanupInfo
	}
	return nil
}

// message for rpc ListBucketLinks
type ListBucketLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// return all links if id not set
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListBucketLinksRequest) Reset() {
	*x = ListBucketLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketLinksRequest) ProtoMessage() {}

func (x *ListBucketLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketLinksRequest.ProtoReflect.Descriptor instead.
func (*ListBucketLinksRequest) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{5}
}

func (x *ListBucketLinksRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListBucketLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         *proto.ResMes     `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	BucketLinkInfo []*BucketLinkInfo `protobuf:"bytes,2,rep,name=bucket_link_info,json=bucketLinkInfo,proto3" json:"bucket_link_info,omitempty"`
}

func (x *ListBucketLinksResponse) Reset() {
	*x = ListBucketLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketLinksResponse) ProtoMessage() {}

func (x *ListBucketLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketLinksResponse.ProtoReflect.Descriptor instead.
func (*ListBucketLinksResponse) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{6}
}

func (x *ListBucketLinksResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListBucketLinksResponse) GetBucketLinkInfo() []*BucketLinkInfo {
	if x != nil {
		return x.BucketLinkInfo
	}
	return nil
}

// message for rpc AddBucketlink
type AddBucketLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkRootDir string `protobuf:"bytes,1,opt,name=link_root_dir,json=linkRootDir,proto3" json:"link_root_dir,omitempty"`
	BucketId    uint32 `protobuf:"varint,2,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
}

func (x *AddBucketLinkRequest) Reset() {
	*x = AddBucketLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBucketLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBucketLinkRequest) ProtoMessage() {}

func (x *AddBucketLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBucketLinkRequest.ProtoReflect.Descriptor instead.
func (*AddBucketLinkRequest) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{7}
}

func (x *AddBucketLinkRequest) GetLinkRootDir() string {
	if x != nil {
		return x.LinkRootDir
	}
	return ""
}

func (x *AddBucketLinkRequest) GetBucketId() uint32 {
	if x != nil {
		return x.BucketId
	}
	return 0
}

type AddBucketLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddBucketLinkResponse) Reset() {
	*x = AddBucketLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBucketLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBucketLinkResponse) ProtoMessage() {}

func (x *AddBucketLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBucketLinkResponse.ProtoReflect.Descriptor instead.
func (*AddBucketLinkResponse) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{8}
}

func (x *AddBucketLinkResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

// message for rpc DelBucketlink
type DelBucketLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkId uint32 `protobuf:"varint,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	// Delete link regardless of its state
	ForceDelete bool `protobuf:"varint,2,opt,name=force_delete,json=forceDelete,proto3" json:"force_delete,omitempty"`
}

func (x *DelBucketLinkRequest) Reset() {
	*x = DelBucketLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBucketLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBucketLinkRequest) ProtoMessage() {}

func (x *DelBucketLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBucketLinkRequest.ProtoReflect.Descriptor instead.
func (*DelBucketLinkRequest) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{9}
}

func (x *DelBucketLinkRequest) GetLinkId() uint32 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

func (x *DelBucketLinkRequest) GetForceDelete() bool {
	if x != nil {
		return x.ForceDelete
	}
	return false
}

type DelBucketLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelBucketLinkResponse) Reset() {
	*x = DelBucketLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBucketLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBucketLinkResponse) ProtoMessage() {}

func (x *DelBucketLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBucketLinkResponse.ProtoReflect.Descriptor instead.
func (*DelBucketLinkResponse) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{10}
}

func (x *DelBucketLinkResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

// message for rpc ImportBucketLink
type ImportBucketLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkId       uint32        `protobuf:"varint,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	ImportConfig *ImportConfig `protobuf:"bytes,2,opt,name=import_config,json=importConfig,proto3" json:"import_config,omitempty"`
	// if true, only update import config
	ImportLater bool `protobuf:"varint,3,opt,name=import_later,json=importLater,proto3" json:"import_later,omitempty"`
}

func (x *ImportBucketLinkRequest) Reset() {
	*x = ImportBucketLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportBucketLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportBucketLinkRequest) ProtoMessage() {}

func (x *ImportBucketLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportBucketLinkRequest.ProtoReflect.Descriptor instead.
func (*ImportBucketLinkRequest) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{11}
}

func (x *ImportBucketLinkRequest) GetLinkId() uint32 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

func (x *ImportBucketLinkRequest) GetImportConfig() *ImportConfig {
	if x != nil {
		return x.ImportConfig
	}
	return nil
}

func (x *ImportBucketLinkRequest) GetImportLater() bool {
	if x != nil {
		return x.ImportLater
	}
	return false
}

type ImportBucketLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ImportBucketLinkResponse) Reset() {
	*x = ImportBucketLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportBucketLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportBucketLinkResponse) ProtoMessage() {}

func (x *ImportBucketLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportBucketLinkResponse.ProtoReflect.Descriptor instead.
func (*ImportBucketLinkResponse) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{12}
}

func (x *ImportBucketLinkResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

// message for rpc ExportBukcetlink
type ExportBucketLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkId       uint32        `protobuf:"varint,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	ExportConfig *ExportConfig `protobuf:"bytes,2,opt,name=export_config,json=exportConfig,proto3" json:"export_config,omitempty"`
	// if true, only update export config
	ExportLater bool `protobuf:"varint,3,opt,name=export_later,json=exportLater,proto3" json:"export_later,omitempty"`
}

func (x *ExportBucketLinkRequest) Reset() {
	*x = ExportBucketLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportBucketLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportBucketLinkRequest) ProtoMessage() {}

func (x *ExportBucketLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportBucketLinkRequest.ProtoReflect.Descriptor instead.
func (*ExportBucketLinkRequest) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{13}
}

func (x *ExportBucketLinkRequest) GetLinkId() uint32 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

func (x *ExportBucketLinkRequest) GetExportConfig() *ExportConfig {
	if x != nil {
		return x.ExportConfig
	}
	return nil
}

func (x *ExportBucketLinkRequest) GetExportLater() bool {
	if x != nil {
		return x.ExportLater
	}
	return false
}

type ExportBucketLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ExportBucketLinkResponse) Reset() {
	*x = ExportBucketLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportBucketLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportBucketLinkResponse) ProtoMessage() {}

func (x *ExportBucketLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportBucketLinkResponse.ProtoReflect.Descriptor instead.
func (*ExportBucketLinkResponse) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{14}
}

func (x *ExportBucketLinkResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

type ImportProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImportTotal  uint64 `protobuf:"varint,1,opt,name=import_total,json=importTotal,proto3" json:"import_total,omitempty"`
	MetaFinished uint64 `protobuf:"varint,2,opt,name=meta_finished,json=metaFinished,proto3" json:"meta_finished,omitempty"`
	DataFinished uint64 `protobuf:"varint,3,opt,name=data_finished,json=dataFinished,proto3" json:"data_finished,omitempty"`
}

func (x *ImportProgress) Reset() {
	*x = ImportProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportProgress) ProtoMessage() {}

func (x *ImportProgress) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportProgress.ProtoReflect.Descriptor instead.
func (*ImportProgress) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{15}
}

func (x *ImportProgress) GetImportTotal() uint64 {
	if x != nil {
		return x.ImportTotal
	}
	return 0
}

func (x *ImportProgress) GetMetaFinished() uint64 {
	if x != nil {
		return x.MetaFinished
	}
	return 0
}

func (x *ImportProgress) GetDataFinished() uint64 {
	if x != nil {
		return x.DataFinished
	}
	return 0
}

type ExportProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExportTotal    uint64 `protobuf:"varint,1,opt,name=export_total,json=exportTotal,proto3" json:"export_total,omitempty"`
	ExportFinished uint64 `protobuf:"varint,2,opt,name=export_finished,json=exportFinished,proto3" json:"export_finished,omitempty"`
}

func (x *ExportProgress) Reset() {
	*x = ExportProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportProgress) ProtoMessage() {}

func (x *ExportProgress) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportProgress.ProtoReflect.Descriptor instead.
func (*ExportProgress) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{16}
}

func (x *ExportProgress) GetExportTotal() uint64 {
	if x != nil {
		return x.ExportTotal
	}
	return 0
}

func (x *ExportProgress) GetExportFinished() uint64 {
	if x != nil {
		return x.ExportFinished
	}
	return 0
}

// message for StatBucketLink
type StatBucketLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkId uint32 `protobuf:"varint,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
}

func (x *StatBucketLinkRequest) Reset() {
	*x = StatBucketLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatBucketLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatBucketLinkRequest) ProtoMessage() {}

func (x *StatBucketLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatBucketLinkRequest.ProtoReflect.Descriptor instead.
func (*StatBucketLinkRequest) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{17}
}

func (x *StatBucketLinkRequest) GetLinkId() uint32 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

type StatBucketLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         *proto.ResMes   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	LinkId         uint32          `protobuf:"varint,2,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	State          string          `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	ImportBucketId uint32          `protobuf:"varint,4,opt,name=import_bucket_id,json=importBucketId,proto3" json:"import_bucket_id,omitempty"`
	ImportProgress *ImportProgress `protobuf:"bytes,5,opt,name=import_progress,json=importProgress,proto3" json:"import_progress,omitempty"`
	ExportBucketId uint32          `protobuf:"varint,6,opt,name=export_bucket_id,json=exportBucketId,proto3" json:"export_bucket_id,omitempty"`
	ExportProgress *ExportProgress `protobuf:"bytes,7,opt,name=export_progress,json=exportProgress,proto3" json:"export_progress,omitempty"`
}

func (x *StatBucketLinkResponse) Reset() {
	*x = StatBucketLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatBucketLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatBucketLinkResponse) ProtoMessage() {}

func (x *StatBucketLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatBucketLinkResponse.ProtoReflect.Descriptor instead.
func (*StatBucketLinkResponse) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{18}
}

func (x *StatBucketLinkResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *StatBucketLinkResponse) GetLinkId() uint32 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

func (x *StatBucketLinkResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StatBucketLinkResponse) GetImportBucketId() uint32 {
	if x != nil {
		return x.ImportBucketId
	}
	return 0
}

func (x *StatBucketLinkResponse) GetImportProgress() *ImportProgress {
	if x != nil {
		return x.ImportProgress
	}
	return nil
}

func (x *StatBucketLinkResponse) GetExportBucketId() uint32 {
	if x != nil {
		return x.ExportBucketId
	}
	return 0
}

func (x *StatBucketLinkResponse) GetExportProgress() *ExportProgress {
	if x != nil {
		return x.ExportProgress
	}
	return nil
}

// message for BucketLinkSubscirbeOps
type BucketLinkSubscribeOpsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkId    uint32                              `protobuf:"varint,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	SubOp     BucketLinkSubscribeOpsRequest_SubOp `protobuf:"varint,2,opt,name=sub_op,json=subOp,proto3,enum=YrcfAgent.BucketLinkSubscribeOpsRequest_SubOp" json:"sub_op,omitempty"`
	SubConfig *SubscribeConfig                    `protobuf:"bytes,3,opt,name=sub_config,json=subConfig,proto3" json:"sub_config,omitempty"`
}

func (x *BucketLinkSubscribeOpsRequest) Reset() {
	*x = BucketLinkSubscribeOpsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketLinkSubscribeOpsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketLinkSubscribeOpsRequest) ProtoMessage() {}

func (x *BucketLinkSubscribeOpsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketLinkSubscribeOpsRequest.ProtoReflect.Descriptor instead.
func (*BucketLinkSubscribeOpsRequest) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{19}
}

func (x *BucketLinkSubscribeOpsRequest) GetLinkId() uint32 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

func (x *BucketLinkSubscribeOpsRequest) GetSubOp() BucketLinkSubscribeOpsRequest_SubOp {
	if x != nil {
		return x.SubOp
	}
	return BucketLinkSubscribeOpsRequest_SUBSCRIBE
}

func (x *BucketLinkSubscribeOpsRequest) GetSubConfig() *SubscribeConfig {
	if x != nil {
		return x.SubConfig
	}
	return nil
}

type BucketLinkSubscribeOpsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *BucketLinkSubscribeOpsResponse) Reset() {
	*x = BucketLinkSubscribeOpsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketLinkSubscribeOpsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketLinkSubscribeOpsResponse) ProtoMessage() {}

func (x *BucketLinkSubscribeOpsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketLinkSubscribeOpsResponse.ProtoReflect.Descriptor instead.
func (*BucketLinkSubscribeOpsResponse) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{20}
}

func (x *BucketLinkSubscribeOpsResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

// message for Bucketlink op history
type ImportHistoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	State       string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	StartTime   string `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     string `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Total       uint64 `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	MetaSuccess uint64 `protobuf:"varint,6,opt,name=meta_success,json=metaSuccess,proto3" json:"meta_success,omitempty"`
	MetaFailed  uint64 `protobuf:"varint,7,opt,name=meta_failed,json=metaFailed,proto3" json:"meta_failed,omitempty"`
	DataSuccess uint64 `protobuf:"varint,8,opt,name=data_success,json=dataSuccess,proto3" json:"data_success,omitempty"`
	DataFailed  uint64 `protobuf:"varint,9,opt,name=data_failed,json=dataFailed,proto3" json:"data_failed,omitempty"`
	// objects already imported
	Skip      uint64 `protobuf:"varint,10,opt,name=skip,proto3" json:"skip,omitempty"`
	WorkAgent uint32 `protobuf:"varint,11,opt,name=work_agent,json=workAgent,proto3" json:"work_agent,omitempty"`
}

func (x *ImportHistoryInfo) Reset() {
	*x = ImportHistoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportHistoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportHistoryInfo) ProtoMessage() {}

func (x *ImportHistoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportHistoryInfo.ProtoReflect.Descriptor instead.
func (*ImportHistoryInfo) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{21}
}

func (x *ImportHistoryInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ImportHistoryInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ImportHistoryInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ImportHistoryInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ImportHistoryInfo) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ImportHistoryInfo) GetMetaSuccess() uint64 {
	if x != nil {
		return x.MetaSuccess
	}
	return 0
}

func (x *ImportHistoryInfo) GetMetaFailed() uint64 {
	if x != nil {
		return x.MetaFailed
	}
	return 0
}

func (x *ImportHistoryInfo) GetDataSuccess() uint64 {
	if x != nil {
		return x.DataSuccess
	}
	return 0
}

func (x *ImportHistoryInfo) GetDataFailed() uint64 {
	if x != nil {
		return x.DataFailed
	}
	return 0
}

func (x *ImportHistoryInfo) GetSkip() uint64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *ImportHistoryInfo) GetWorkAgent() uint32 {
	if x != nil {
		return x.WorkAgent
	}
	return 0
}

type ExportHistoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	State     string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	StartTime string `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Total     uint64 `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	Success   uint64 `protobuf:"varint,6,opt,name=success,proto3" json:"success,omitempty"`
	Failed    uint64 `protobuf:"varint,7,opt,name=failed,proto3" json:"failed,omitempty"`
	WorkAgent uint32 `protobuf:"varint,8,opt,name=work_agent,json=workAgent,proto3" json:"work_agent,omitempty"`
}

func (x *ExportHistoryInfo) Reset() {
	*x = ExportHistoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportHistoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportHistoryInfo) ProtoMessage() {}

func (x *ExportHistoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportHistoryInfo.ProtoReflect.Descriptor instead.
func (*ExportHistoryInfo) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{22}
}

func (x *ExportHistoryInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExportHistoryInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ExportHistoryInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ExportHistoryInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ExportHistoryInfo) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ExportHistoryInfo) GetSuccess() uint64 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *ExportHistoryInfo) GetFailed() uint64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *ExportHistoryInfo) GetWorkAgent() uint32 {
	if x != nil {
		return x.WorkAgent
	}
	return 0
}

type ShowBucketLinkHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkId   uint32                                `protobuf:"varint,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	ShowType ShowBucketLinkHistoryRequest_ShowType `protobuf:"varint,2,opt,name=show_type,json=showType,proto3,enum=YrcfAgent.ShowBucketLinkHistoryRequest_ShowType" json:"show_type,omitempty"`
}

func (x *ShowBucketLinkHistoryRequest) Reset() {
	*x = ShowBucketLinkHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowBucketLinkHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowBucketLinkHistoryRequest) ProtoMessage() {}

func (x *ShowBucketLinkHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowBucketLinkHistoryRequest.ProtoReflect.Descriptor instead.
func (*ShowBucketLinkHistoryRequest) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{23}
}

func (x *ShowBucketLinkHistoryRequest) GetLinkId() uint32 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

func (x *ShowBucketLinkHistoryRequest) GetShowType() ShowBucketLinkHistoryRequest_ShowType {
	if x != nil {
		return x.ShowType
	}
	return ShowBucketLinkHistoryRequest_IMPORT
}

type ShowBucketLinkHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result            *proto.ResMes        `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ImportHistoryInfo []*ImportHistoryInfo `protobuf:"bytes,2,rep,name=import_history_info,json=importHistoryInfo,proto3" json:"import_history_info,omitempty"`
	ExportHistoryInfo []*ExportHistoryInfo `protobuf:"bytes,3,rep,name=export_history_info,json=exportHistoryInfo,proto3" json:"export_history_info,omitempty"`
}

func (x *ShowBucketLinkHistoryResponse) Reset() {
	*x = ShowBucketLinkHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowBucketLinkHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowBucketLinkHistoryResponse) ProtoMessage() {}

func (x *ShowBucketLinkHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowBucketLinkHistoryResponse.ProtoReflect.Descriptor instead.
func (*ShowBucketLinkHistoryResponse) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{24}
}

func (x *ShowBucketLinkHistoryResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ShowBucketLinkHistoryResponse) GetImportHistoryInfo() []*ImportHistoryInfo {
	if x != nil {
		return x.ImportHistoryInfo
	}
	return nil
}

func (x *ShowBucketLinkHistoryResponse) GetExportHistoryInfo() []*ExportHistoryInfo {
	if x != nil {
		return x.ExportHistoryInfo
	}
	return nil
}

// message for rpc HotLayerCleanupOps
type HotLayerCleanupOpsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CleanupOp HotLayerCleanupOpsRequest_HotLayerCleanupOp `protobuf:"varint,1,opt,name=cleanup_op,json=cleanupOp,proto3,enum=YrcfAgent.HotLayerCleanupOpsRequest_HotLayerCleanupOp" json:"cleanup_op,omitempty"`
	LinkId    uint32                                      `protobuf:"varint,2,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	// once file imported is not used for <cold_time> seconds,
	// it will be automatically cleared when <cleanup_timer> triggers.
	// To turn of cleanup, set <cold_time> to 0.
	ColdTime     uint64 `protobuf:"varint,3,opt,name=cold_time,json=coldTime,proto3" json:"cold_time,omitempty"`
	CleanupTimer string `protobuf:"bytes,4,opt,name=cleanup_timer,json=cleanupTimer,proto3" json:"cleanup_timer,omitempty"`
}

func (x *HotLayerCleanupOpsRequest) Reset() {
	*x = HotLayerCleanupOpsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotLayerCleanupOpsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotLayerCleanupOpsRequest) ProtoMessage() {}

func (x *HotLayerCleanupOpsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotLayerCleanupOpsRequest.ProtoReflect.Descriptor instead.
func (*HotLayerCleanupOpsRequest) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{25}
}

func (x *HotLayerCleanupOpsRequest) GetCleanupOp() HotLayerCleanupOpsRequest_HotLayerCleanupOp {
	if x != nil {
		return x.CleanupOp
	}
	return HotLayerCleanupOpsRequest_UPDATE_CLEANUP_RULES
}

func (x *HotLayerCleanupOpsRequest) GetLinkId() uint32 {
	if x != nil {
		return x.LinkId
	}
	return 0
}

func (x *HotLayerCleanupOpsRequest) GetColdTime() uint64 {
	if x != nil {
		return x.ColdTime
	}
	return 0
}

func (x *HotLayerCleanupOpsRequest) GetCleanupTimer() string {
	if x != nil {
		return x.CleanupTimer
	}
	return ""
}

type HotLayerCleanupOpsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *HotLayerCleanupOpsResponse) Reset() {
	*x = HotLayerCleanupOpsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotLayerCleanupOpsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotLayerCleanupOpsResponse) ProtoMessage() {}

func (x *HotLayerCleanupOpsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucketlink_proto_bucketlink_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotLayerCleanupOpsResponse.ProtoReflect.Descriptor instead.
func (*HotLayerCleanupOpsResponse) Descriptor() ([]byte, []int) {
	return file_bucketlink_proto_bucketlink_proto_rawDescGZIP(), []int{26}
}

func (x *HotLayerCleanupOpsResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_bucketlink_proto_bucketlink_proto protoreflect.FileDescriptor

var file_bucketlink_proto_bucketlink_proto_rawDesc = []byte{
	0x0a, 0x21, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x0e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b,
	0x03, 0x0a, 0x0c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x33, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x3d, 0x0a, 0x09, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x59, 0x72, 0x63, 0x66,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x61,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x6c, 0x6c, 0x22, 0x58,
	0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4d, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x49, 0x58, 0x5f,
	0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4d, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x22, 0x42, 0x0a, 0x08, 0x4c, 0x6f, 0x61, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4d, 0x45, 0x54,
	0x41, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4d, 0x45, 0x54, 0x41,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x41, 0x44, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x02, 0x22, 0xdd, 0x05, 0x0a,
	0x0c, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x59, 0x72, 0x63, 0x66,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x12, 0x3d, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69,
	0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x75, 0x72, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x69, 0x6c, 0x6c, 0x50, 0x75, 0x72, 0x67, 0x65,
	0x12, 0x46, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x50, 0x75, 0x72, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x70, 0x75, 0x72,
	0x67, 0x65, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x65, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x45, 0x54, 0x61, 0x67, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x09, 0x65, 0x74, 0x61, 0x67, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x44, 0x49, 0x52, 0x54, 0x59, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x58, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x49, 0x58, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10,
	0x04, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x44, 0x49, 0x52, 0x54,
	0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x05, 0x12, 0x1d,
	0x0a, 0x19, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x44, 0x49, 0x52, 0x54, 0x59, 0x5f, 0x50,
	0x52, 0x45, 0x46, 0x49, 0x58, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x06, 0x22, 0x2a, 0x0a,
	0x08, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x53, 0x45,
	0x5f, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x44, 0x44,
	0x5f, 0x53, 0x55, 0x46, 0x46, 0x49, 0x58, 0x10, 0x01, 0x22, 0x1f, 0x0a, 0x0b, 0x50, 0x75, 0x72,
	0x67, 0x65, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x46, 0x54, 0x45,
	0x52, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x00, 0x22, 0x30, 0x0a, 0x09, 0x45, 0x54,
	0x61, 0x67, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x4f, 0x4e, 0x54, 0x5f,
	0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x45, 0x54, 0x41, 0x47, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x45, 0x54, 0x41, 0x47, 0x10, 0x01, 0x22, 0xc2, 0x01, 0x0a,
	0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x3a, 0x0a, 0x07, 0x73, 0x33, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x33,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x33, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x6f, 0x75, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x73, 0x75, 0x62, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x54, 0x65, 0x73, 0x74, 0x22, 0x31,
	0x0a, 0x06, 0x53, 0x33, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e, 0x53, 0x45,
	0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x49, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x42, 0x41, 0x49, 0x44, 0x55, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x45, 0x50, 0x48, 0x10,
	0x03, 0x22, 0x57, 0x0a, 0x13, 0x48, 0x6f, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x6c,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c,
	0x65, 0x61, 0x6e, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x22, 0xbb, 0x03, 0x0a, 0x0e, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a,
	0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x3c, 0x0a, 0x0d, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a,
	0x0d, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x75, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x53, 0x0a, 0x16, 0x68, 0x6f, 0x74, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x48, 0x6f, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x13, 0x68, 0x6f, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65,
	0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x57,
	0x0a, 0x14, 0x41, 0x64, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x72,
	0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x69, 0x6e, 0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x52, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22,
	0x42, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x17, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x18, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x93, 0x01, 0x0a, 0x17, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c,
	0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59,
	0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x18, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7d, 0x0a,
	0x0e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x5c, 0x0a, 0x0e,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x30, 0x0a, 0x15, 0x53, 0x74,
	0x61, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x22, 0xce, 0x02, 0x0a,
	0x16, 0x53, 0x74, 0x61, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x0e, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x28, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xe3, 0x01,
	0x0a, 0x1d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x5f,
	0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x4f, 0x70, 0x52, 0x05, 0x73, 0x75, 0x62, 0x4f, 0x70, 0x12,
	0x39, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x09, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x27, 0x0a, 0x05, 0x53, 0x75,
	0x62, 0x4f, 0x70, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42,
	0x45, 0x10, 0x01, 0x22, 0x4b, 0x0a, 0x1e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x70, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xc4, 0x02, 0x0a, 0x11, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x65, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x1c, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x4d,
	0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x30, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x68,
	0x6f, 0x77, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22, 0x22, 0x0a,
	0x08, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4d, 0x50,
	0x4f, 0x52, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x10,
	0x01, 0x22, 0xe6, 0x01, 0x0a, 0x1d, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4c,
	0x0a, 0x13, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x59, 0x72,
	0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x13,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x59, 0x72, 0x63, 0x66,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x91, 0x02, 0x0a, 0x19, 0x48,
	0x6f, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x4f, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x0a, 0x63, 0x6c, 0x65, 0x61,
	0x6e, 0x75, 0x70, 0x5f, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x59,
	0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x74, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x4f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x48, 0x6f, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x75, 0x70, 0x4f, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x4f, 0x70, 0x12,
	0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x6c,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c,
	0x65, 0x61, 0x6e, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x11, 0x48, 0x6f,
	0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x4f, 0x70, 0x12,
	0x18, 0x0a, 0x14, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x55,
	0x50, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x53, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x52, 0x49,
	0x47, 0x47, 0x45, 0x52, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x55, 0x50, 0x10, 0x01, 0x22, 0x47,
	0x0a, 0x1a, 0x48, 0x6f, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75,
	0x70, 0x4f, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x59,
	0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xef, 0x06, 0x0a, 0x0a, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x5a, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x21, 0x2e, 0x59, 0x72, 0x63, 0x66,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x59,
	0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x2e, 0x59, 0x72, 0x63, 0x66,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x59, 0x72, 0x63,
	0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d,
	0x0a, 0x10, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x22, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a,
	0x10, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x22, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e,
	0x53, 0x74, 0x61, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x20,
	0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x16, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x70, 0x73, 0x12,
	0x28, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x59, 0x72, 0x63, 0x66,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x27, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x48, 0x6f, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x4f, 0x70, 0x73, 0x12, 0x24, 0x2e, 0x59, 0x72, 0x63,
	0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x4f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f, 0x74,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x4f, 0x70, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x79, 0x72, 0x63,
	0x66, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x3b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bucketlink_proto_bucketlink_proto_rawDescOnce sync.Once
	file_bucketlink_proto_bucketlink_proto_rawDescData = file_bucketlink_proto_bucketlink_proto_rawDesc
)

func file_bucketlink_proto_bucketlink_proto_rawDescGZIP() []byte {
	file_bucketlink_proto_bucketlink_proto_rawDescOnce.Do(func() {
		file_bucketlink_proto_bucketlink_proto_rawDescData = protoimpl.X.CompressGZIP(file_bucketlink_proto_bucketlink_proto_rawDescData)
	})
	return file_bucketlink_proto_bucketlink_proto_rawDescData
}

var file_bucketlink_proto_bucketlink_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_bucketlink_proto_bucketlink_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_bucketlink_proto_bucketlink_proto_goTypes = []any{
	(ImportConfig_Scope)(0),                          // 0: YrcfAgent.ImportConfig.Scope
	(ImportConfig_LoadType)(0),                       // 1: YrcfAgent.ImportConfig.LoadType
	(ExportConfig_Scope)(0),                          // 2: YrcfAgent.ExportConfig.Scope
	(ExportConfig_NameRule)(0),                       // 3: YrcfAgent.ExportConfig.NameRule
	(ExportConfig_PurgeTiming)(0),                    // 4: YrcfAgent.ExportConfig.PurgeTiming
	(ExportConfig_ETagScope)(0),                      // 5: YrcfAgent.ExportConfig.ETagScope
	(SubscribeConfig_S3Type)(0),                      // 6: YrcfAgent.SubscribeConfig.S3Type
	(BucketLinkSubscribeOpsRequest_SubOp)(0),         // 7: YrcfAgent.BucketLinkSubscribeOpsRequest.SubOp
	(ShowBucketLinkHistoryRequest_ShowType)(0),       // 8: YrcfAgent.ShowBucketLinkHistoryRequest.ShowType
	(HotLayerCleanupOpsRequest_HotLayerCleanupOp)(0), // 9: YrcfAgent.HotLayerCleanupOpsRequest.HotLayerCleanupOp
	(*ImportConfig)(nil),                             // 10: YrcfAgent.ImportConfig
	(*ExportConfig)(nil),                             // 11: YrcfAgent.ExportConfig
	(*SubscribeConfig)(nil),                          // 12: YrcfAgent.SubscribeConfig
	(*HotLayerCleanupInfo)(nil),                      // 13: YrcfAgent.HotLayerCleanupInfo
	(*BucketLinkInfo)(nil),                           // 14: YrcfAgent.BucketLinkInfo
	(*ListBucketLinksRequest)(nil),                   // 15: YrcfAgent.ListBucketLinksRequest
	(*ListBucketLinksResponse)(nil),                  // 16: YrcfAgent.ListBucketLinksResponse
	(*AddBucketLinkRequest)(nil),                     // 17: YrcfAgent.AddBucketLinkRequest
	(*AddBucketLinkResponse)(nil),                    // 18: YrcfAgent.AddBucketLinkResponse
	(*DelBucketLinkRequest)(nil),                     // 19: YrcfAgent.DelBucketLinkRequest
	(*DelBucketLinkResponse)(nil),                    // 20: YrcfAgent.DelBucketLinkResponse
	(*ImportBucketLinkRequest)(nil),                  // 21: YrcfAgent.ImportBucketLinkRequest
	(*ImportBucketLinkResponse)(nil),                 // 22: YrcfAgent.ImportBucketLinkResponse
	(*ExportBucketLinkRequest)(nil),                  // 23: YrcfAgent.ExportBucketLinkRequest
	(*ExportBucketLinkResponse)(nil),                 // 24: YrcfAgent.ExportBucketLinkResponse
	(*ImportProgress)(nil),                           // 25: YrcfAgent.ImportProgress
	(*ExportProgress)(nil),                           // 26: YrcfAgent.ExportProgress
	(*StatBucketLinkRequest)(nil),                    // 27: YrcfAgent.StatBucketLinkRequest
	(*StatBucketLinkResponse)(nil),                   // 28: YrcfAgent.StatBucketLinkResponse
	(*BucketLinkSubscribeOpsRequest)(nil),            // 29: YrcfAgent.BucketLinkSubscribeOpsRequest
	(*BucketLinkSubscribeOpsResponse)(nil),           // 30: YrcfAgent.BucketLinkSubscribeOpsResponse
	(*ImportHistoryInfo)(nil),                        // 31: YrcfAgent.ImportHistoryInfo
	(*ExportHistoryInfo)(nil),                        // 32: YrcfAgent.ExportHistoryInfo
	(*ShowBucketLinkHistoryRequest)(nil),             // 33: YrcfAgent.ShowBucketLinkHistoryRequest
	(*ShowBucketLinkHistoryResponse)(nil),            // 34: YrcfAgent.ShowBucketLinkHistoryResponse
	(*HotLayerCleanupOpsRequest)(nil),                // 35: YrcfAgent.HotLayerCleanupOpsRequest
	(*HotLayerCleanupOpsResponse)(nil),               // 36: YrcfAgent.HotLayerCleanupOpsResponse
	(*proto.ResMes)(nil),                             // 37: YrcfAgent.ResMes
}
var file_bucketlink_proto_bucketlink_proto_depIdxs = []int32{
	0,  // 0: YrcfAgent.ImportConfig.scope:type_name -> YrcfAgent.ImportConfig.Scope
	1,  // 1: YrcfAgent.ImportConfig.load_type:type_name -> YrcfAgent.ImportConfig.LoadType
	2,  // 2: YrcfAgent.ExportConfig.scope:type_name -> YrcfAgent.ExportConfig.Scope
	3,  // 3: YrcfAgent.ExportConfig.name_rule:type_name -> YrcfAgent.ExportConfig.NameRule
	4,  // 4: YrcfAgent.ExportConfig.purge_timing:type_name -> YrcfAgent.ExportConfig.PurgeTiming
	5,  // 5: YrcfAgent.ExportConfig.etag_scope:type_name -> YrcfAgent.ExportConfig.ETagScope
	6,  // 6: YrcfAgent.SubscribeConfig.s3_type:type_name -> YrcfAgent.SubscribeConfig.S3Type
	10, // 7: YrcfAgent.BucketLinkInfo.import_config:type_name -> YrcfAgent.ImportConfig
	11, // 8: YrcfAgent.BucketLinkInfo.export_config:type_name -> YrcfAgent.ExportConfig
	12, // 9: YrcfAgent.BucketLinkInfo.sub_config:type_name -> YrcfAgent.SubscribeConfig
	13, // 10: YrcfAgent.BucketLinkInfo.hot_layer_cleanup_info:type_name -> YrcfAgent.HotLayerCleanupInfo
	37, // 11: YrcfAgent.ListBucketLinksResponse.result:type_name -> YrcfAgent.ResMes
	14, // 12: YrcfAgent.ListBucketLinksResponse.bucket_link_info:type_name -> YrcfAgent.BucketLinkInfo
	37, // 13: YrcfAgent.AddBucketLinkResponse.result:type_name -> YrcfAgent.ResMes
	37, // 14: YrcfAgent.DelBucketLinkResponse.result:type_name -> YrcfAgent.ResMes
	10, // 15: YrcfAgent.ImportBucketLinkRequest.import_config:type_name -> YrcfAgent.ImportConfig
	37, // 16: YrcfAgent.ImportBucketLinkResponse.result:type_name -> YrcfAgent.ResMes
	11, // 17: YrcfAgent.ExportBucketLinkRequest.export_config:type_name -> YrcfAgent.ExportConfig
	37, // 18: YrcfAgent.ExportBucketLinkResponse.result:type_name -> YrcfAgent.ResMes
	37, // 19: YrcfAgent.StatBucketLinkResponse.result:type_name -> YrcfAgent.ResMes
	25, // 20: YrcfAgent.StatBucketLinkResponse.import_progress:type_name -> YrcfAgent.ImportProgress
	26, // 21: YrcfAgent.StatBucketLinkResponse.export_progress:type_name -> YrcfAgent.ExportProgress
	7,  // 22: YrcfAgent.BucketLinkSubscribeOpsRequest.sub_op:type_name -> YrcfAgent.BucketLinkSubscribeOpsRequest.SubOp
	12, // 23: YrcfAgent.BucketLinkSubscribeOpsRequest.sub_config:type_name -> YrcfAgent.SubscribeConfig
	37, // 24: YrcfAgent.BucketLinkSubscribeOpsResponse.result:type_name -> YrcfAgent.ResMes
	8,  // 25: YrcfAgent.ShowBucketLinkHistoryRequest.show_type:type_name -> YrcfAgent.ShowBucketLinkHistoryRequest.ShowType
	37, // 26: YrcfAgent.ShowBucketLinkHistoryResponse.result:type_name -> YrcfAgent.ResMes
	31, // 27: YrcfAgent.ShowBucketLinkHistoryResponse.import_history_info:type_name -> YrcfAgent.ImportHistoryInfo
	32, // 28: YrcfAgent.ShowBucketLinkHistoryResponse.export_history_info:type_name -> YrcfAgent.ExportHistoryInfo
	9,  // 29: YrcfAgent.HotLayerCleanupOpsRequest.cleanup_op:type_name -> YrcfAgent.HotLayerCleanupOpsRequest.HotLayerCleanupOp
	37, // 30: YrcfAgent.HotLayerCleanupOpsResponse.result:type_name -> YrcfAgent.ResMes
	15, // 31: YrcfAgent.BucketLink.ListBucketLinks:input_type -> YrcfAgent.ListBucketLinksRequest
	17, // 32: YrcfAgent.BucketLink.AddBucketLink:input_type -> YrcfAgent.AddBucketLinkRequest
	19, // 33: YrcfAgent.BucketLink.DelBucketLink:input_type -> YrcfAgent.DelBucketLinkRequest
	21, // 34: YrcfAgent.BucketLink.ImportBucketLink:input_type -> YrcfAgent.ImportBucketLinkRequest
	23, // 35: YrcfAgent.BucketLink.ExportBucketLink:input_type -> YrcfAgent.ExportBucketLinkRequest
	27, // 36: YrcfAgent.BucketLink.StatBucketLink:input_type -> YrcfAgent.StatBucketLinkRequest
	29, // 37: YrcfAgent.BucketLink.BucketLinkSubscribeOps:input_type -> YrcfAgent.BucketLinkSubscribeOpsRequest
	33, // 38: YrcfAgent.BucketLink.ShowBucketLinkHistory:input_type -> YrcfAgent.ShowBucketLinkHistoryRequest
	35, // 39: YrcfAgent.BucketLink.HotLayerCleanupOps:input_type -> YrcfAgent.HotLayerCleanupOpsRequest
	16, // 40: YrcfAgent.BucketLink.ListBucketLinks:output_type -> YrcfAgent.ListBucketLinksResponse
	18, // 41: YrcfAgent.BucketLink.AddBucketLink:output_type -> YrcfAgent.AddBucketLinkResponse
	20, // 42: YrcfAgent.BucketLink.DelBucketLink:output_type -> YrcfAgent.DelBucketLinkResponse
	22, // 43: YrcfAgent.BucketLink.ImportBucketLink:output_type -> YrcfAgent.ImportBucketLinkResponse
	24, // 44: YrcfAgent.BucketLink.ExportBucketLink:output_type -> YrcfAgent.ExportBucketLinkResponse
	28, // 45: YrcfAgent.BucketLink.StatBucketLink:output_type -> YrcfAgent.StatBucketLinkResponse
	30, // 46: YrcfAgent.BucketLink.BucketLinkSubscribeOps:output_type -> YrcfAgent.BucketLinkSubscribeOpsResponse
	34, // 47: YrcfAgent.BucketLink.ShowBucketLinkHistory:output_type -> YrcfAgent.ShowBucketLinkHistoryResponse
	36, // 48: YrcfAgent.BucketLink.HotLayerCleanupOps:output_type -> YrcfAgent.HotLayerCleanupOpsResponse
	40, // [40:49] is the sub-list for method output_type
	31, // [31:40] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_bucketlink_proto_bucketlink_proto_init() }
func file_bucketlink_proto_bucketlink_proto_init() {
	if File_bucketlink_proto_bucketlink_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bucketlink_proto_bucketlink_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ImportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ExportConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SubscribeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*HotLayerCleanupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BucketLinkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListBucketLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListBucketLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AddBucketLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AddBucketLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DelBucketLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DelBucketLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ImportBucketLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ImportBucketLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ExportBucketLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ExportBucketLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ImportProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ExportProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*StatBucketLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*StatBucketLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*BucketLinkSubscribeOpsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*BucketLinkSubscribeOpsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ImportHistoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ExportHistoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ShowBucketLinkHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ShowBucketLinkHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*HotLayerCleanupOpsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucketlink_proto_bucketlink_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*HotLayerCleanupOpsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bucketlink_proto_bucketlink_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bucketlink_proto_bucketlink_proto_goTypes,
		DependencyIndexes: file_bucketlink_proto_bucketlink_proto_depIdxs,
		EnumInfos:         file_bucketlink_proto_bucketlink_proto_enumTypes,
		MessageInfos:      file_bucketlink_proto_bucketlink_proto_msgTypes,
	}.Build()
	File_bucketlink_proto_bucketlink_proto = out.File
	file_bucketlink_proto_bucketlink_proto_rawDesc = nil
	file_bucketlink_proto_bucketlink_proto_goTypes = nil
	file_bucketlink_proto_bucketlink_proto_depIdxs = nil
}
