// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: addecgroup/proto/addecgroup.proto

package addecgroup

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	proto "yrcf_grpc_case/grpc/common/proto/"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ECGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Use the given ID for the new group, if not set,
	// it will be gerated automatically by default.
	GroupId     uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	DataNum     uint32 `protobuf:"varint,2,opt,name=data_num,json=dataNum,proto3" json:"data_num,omitempty"`
	ParityNum   uint32 `protobuf:"varint,3,opt,name=parity_num,json=parityNum,proto3" json:"parity_num,omitempty"`
	MasterOsdId uint32 `protobuf:"varint,4,opt,name=master_osd_id,json=masterOsdId,proto3" json:"master_osd_id,omitempty"` // specified master node id, must set with parameter <osd_ids>
	OsdIds      string `protobuf:"bytes,5,opt,name=osd_ids,json=osdIds,proto3" json:"osd_ids,omitempty"`
}

func (x *ECGroupInfo) Reset() {
	*x = ECGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addecgroup_proto_addecgroup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECGroupInfo) ProtoMessage() {}

func (x *ECGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_addecgroup_proto_addecgroup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECGroupInfo.ProtoReflect.Descriptor instead.
func (*ECGroupInfo) Descriptor() ([]byte, []int) {
	return file_addecgroup_proto_addecgroup_proto_rawDescGZIP(), []int{0}
}

func (x *ECGroupInfo) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ECGroupInfo) GetDataNum() uint32 {
	if x != nil {
		return x.DataNum
	}
	return 0
}

func (x *ECGroupInfo) GetParityNum() uint32 {
	if x != nil {
		return x.ParityNum
	}
	return 0
}

func (x *ECGroupInfo) GetMasterOsdId() uint32 {
	if x != nil {
		return x.MasterOsdId
	}
	return 0
}

func (x *ECGroupInfo) GetOsdIds() string {
	if x != nil {
		return x.OsdIds
	}
	return ""
}

// message for rpc add group
type AddECGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoAddGroup bool `protobuf:"varint,1,opt,name=auto_add_group,json=autoAddGroup,proto3" json:"auto_add_group,omitempty"`
	// add group forcelyeven there is something unexpected
	// For example,master and slave node with different disk space.
	ForceAdd    bool         `protobuf:"varint,2,opt,name=force_add,json=forceAdd,proto3" json:"force_add,omitempty"`
	Preview     bool         `protobuf:"varint,3,opt,name=preview,proto3" json:"preview,omitempty"` // Preview the schema before update to cluster.
	EcGroupInfo *ECGroupInfo `protobuf:"bytes,4,opt,name=ec_group_info,json=ecGroupInfo,proto3" json:"ec_group_info,omitempty"`
}

func (x *AddECGroupRequest) Reset() {
	*x = AddECGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addecgroup_proto_addecgroup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddECGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddECGroupRequest) ProtoMessage() {}

func (x *AddECGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_addecgroup_proto_addecgroup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddECGroupRequest.ProtoReflect.Descriptor instead.
func (*AddECGroupRequest) Descriptor() ([]byte, []int) {
	return file_addecgroup_proto_addecgroup_proto_rawDescGZIP(), []int{1}
}

func (x *AddECGroupRequest) GetAutoAddGroup() bool {
	if x != nil {
		return x.AutoAddGroup
	}
	return false
}

func (x *AddECGroupRequest) GetForceAdd() bool {
	if x != nil {
		return x.ForceAdd
	}
	return false
}

func (x *AddECGroupRequest) GetPreview() bool {
	if x != nil {
		return x.Preview
	}
	return false
}

func (x *AddECGroupRequest) GetEcGroupInfo() *ECGroupInfo {
	if x != nil {
		return x.EcGroupInfo
	}
	return nil
}

type AddECGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *proto.ResMes  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	EcGroupInfo []*ECGroupInfo `protobuf:"bytes,2,rep,name=ec_group_info,json=ecGroupInfo,proto3" json:"ec_group_info,omitempty"`
}

func (x *AddECGroupResponse) Reset() {
	*x = AddECGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_addecgroup_proto_addecgroup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddECGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddECGroupResponse) ProtoMessage() {}

func (x *AddECGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_addecgroup_proto_addecgroup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddECGroupResponse.ProtoReflect.Descriptor instead.
func (*AddECGroupResponse) Descriptor() ([]byte, []int) {
	return file_addecgroup_proto_addecgroup_proto_rawDescGZIP(), []int{2}
}

func (x *AddECGroupResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AddECGroupResponse) GetEcGroupInfo() []*ECGroupInfo {
	if x != nil {
		return x.EcGroupInfo
	}
	return nil
}

var File_addecgroup_proto_addecgroup_proto protoreflect.FileDescriptor

var file_addecgroup_proto_addecgroup_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x64, 0x64, 0x65, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x64, 0x64, 0x65, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x0e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f,
	0x01, 0x0a, 0x0b, 0x45, 0x43, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x61, 0x74,
	0x61, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x73,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x4f, 0x73, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73, 0x64, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x73, 0x64, 0x49, 0x64, 0x73,
	0x22, 0xac, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x45, 0x43, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61,
	0x64, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x61, 0x75, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x63, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x59, 0x72, 0x63,
	0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x43, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x65, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x7b, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x45, 0x43, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x63, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x43, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x65, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x59, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x45, 0x43, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x4b, 0x0a, 0x0a, 0x41, 0x64,
	0x64, 0x45, 0x43, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x43, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x43, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x79, 0x72, 0x63, 0x66, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61,
	0x64, 0x64, 0x65, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x3b, 0x61, 0x64, 0x64, 0x65, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_addecgroup_proto_addecgroup_proto_rawDescOnce sync.Once
	file_addecgroup_proto_addecgroup_proto_rawDescData = file_addecgroup_proto_addecgroup_proto_rawDesc
)

func file_addecgroup_proto_addecgroup_proto_rawDescGZIP() []byte {
	file_addecgroup_proto_addecgroup_proto_rawDescOnce.Do(func() {
		file_addecgroup_proto_addecgroup_proto_rawDescData = protoimpl.X.CompressGZIP(file_addecgroup_proto_addecgroup_proto_rawDescData)
	})
	return file_addecgroup_proto_addecgroup_proto_rawDescData
}

var file_addecgroup_proto_addecgroup_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_addecgroup_proto_addecgroup_proto_goTypes = []any{
	(*ECGroupInfo)(nil),        // 0: YrcfAgent.ECGroupInfo
	(*AddECGroupRequest)(nil),  // 1: YrcfAgent.AddECGroupRequest
	(*AddECGroupResponse)(nil), // 2: YrcfAgent.AddECGroupResponse
	(*proto.ResMes)(nil),       // 3: YrcfAgent.ResMes
}
var file_addecgroup_proto_addecgroup_proto_depIdxs = []int32{
	0, // 0: YrcfAgent.AddECGroupRequest.ec_group_info:type_name -> YrcfAgent.ECGroupInfo
	3, // 1: YrcfAgent.AddECGroupResponse.result:type_name -> YrcfAgent.ResMes
	0, // 2: YrcfAgent.AddECGroupResponse.ec_group_info:type_name -> YrcfAgent.ECGroupInfo
	1, // 3: YrcfAgent.AddECGroup.AddECGroup:input_type -> YrcfAgent.AddECGroupRequest
	2, // 4: YrcfAgent.AddECGroup.AddECGroup:output_type -> YrcfAgent.AddECGroupResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_addecgroup_proto_addecgroup_proto_init() }
func file_addecgroup_proto_addecgroup_proto_init() {
	if File_addecgroup_proto_addecgroup_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_addecgroup_proto_addecgroup_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ECGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_addecgroup_proto_addecgroup_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddECGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_addecgroup_proto_addecgroup_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddECGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_addecgroup_proto_addecgroup_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_addecgroup_proto_addecgroup_proto_goTypes,
		DependencyIndexes: file_addecgroup_proto_addecgroup_proto_depIdxs,
		MessageInfos:      file_addecgroup_proto_addecgroup_proto_msgTypes,
	}.Build()
	File_addecgroup_proto_addecgroup_proto = out.File
	file_addecgroup_proto_addecgroup_proto_rawDesc = nil
	file_addecgroup_proto_addecgroup_proto_goTypes = nil
	file_addecgroup_proto_addecgroup_proto_depIdxs = nil
}
