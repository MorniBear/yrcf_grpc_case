// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: tiering/proto/tiering.proto

package tiering

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	proto "yrcf_grpc_case/grpc/common/proto"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// set bucket state
type UpdateTieringRequest_SetBucketStateType int32

const (
	// default this type, and will be ignored
	UpdateTieringRequest_INVALID_TYPE UpdateTieringRequest_SetBucketStateType = 0
	// will keep up state
	UpdateTieringRequest_MANUALLY_UP UpdateTieringRequest_SetBucketStateType = 1
	// will keep down state
	UpdateTieringRequest_MANUALLY_DOWN UpdateTieringRequest_SetBucketStateType = 2
	// state will be set up till ping bucket failed
	UpdateTieringRequest_STATE_UP UpdateTieringRequest_SetBucketStateType = 3
)

// Enum value maps for UpdateTieringRequest_SetBucketStateType.
var (
	UpdateTieringRequest_SetBucketStateType_name = map[int32]string{
		0: "INVALID_TYPE",
		1: "MANUALLY_UP",
		2: "MANUALLY_DOWN",
		3: "STATE_UP",
	}
	UpdateTieringRequest_SetBucketStateType_value = map[string]int32{
		"INVALID_TYPE":  0,
		"MANUALLY_UP":   1,
		"MANUALLY_DOWN": 2,
		"STATE_UP":      3,
	}
)

func (x UpdateTieringRequest_SetBucketStateType) Enum() *UpdateTieringRequest_SetBucketStateType {
	p := new(UpdateTieringRequest_SetBucketStateType)
	*p = x
	return p
}

func (x UpdateTieringRequest_SetBucketStateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateTieringRequest_SetBucketStateType) Descriptor() protoreflect.EnumDescriptor {
	return file_tiering_proto_tiering_proto_enumTypes[0].Descriptor()
}

func (UpdateTieringRequest_SetBucketStateType) Type() protoreflect.EnumType {
	return &file_tiering_proto_tiering_proto_enumTypes[0]
}

func (x UpdateTieringRequest_SetBucketStateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateTieringRequest_SetBucketStateType.Descriptor instead.
func (UpdateTieringRequest_SetBucketStateType) EnumDescriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{5, 0}
}

type InfoTieringRequest_InfoTieringOp int32

const (
	InfoTieringRequest_GET_CURRENT InfoTieringRequest_InfoTieringOp = 0
	InfoTieringRequest_GET_HISTORY InfoTieringRequest_InfoTieringOp = 1
)

// Enum value maps for InfoTieringRequest_InfoTieringOp.
var (
	InfoTieringRequest_InfoTieringOp_name = map[int32]string{
		0: "GET_CURRENT",
		1: "GET_HISTORY",
	}
	InfoTieringRequest_InfoTieringOp_value = map[string]int32{
		"GET_CURRENT": 0,
		"GET_HISTORY": 1,
	}
)

func (x InfoTieringRequest_InfoTieringOp) Enum() *InfoTieringRequest_InfoTieringOp {
	p := new(InfoTieringRequest_InfoTieringOp)
	*p = x
	return p
}

func (x InfoTieringRequest_InfoTieringOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InfoTieringRequest_InfoTieringOp) Descriptor() protoreflect.EnumDescriptor {
	return file_tiering_proto_tiering_proto_enumTypes[1].Descriptor()
}

func (InfoTieringRequest_InfoTieringOp) Type() protoreflect.EnumType {
	return &file_tiering_proto_tiering_proto_enumTypes[1]
}

func (x InfoTieringRequest_InfoTieringOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InfoTieringRequest_InfoTieringOp.Descriptor instead.
func (InfoTieringRequest_InfoTieringOp) EnumDescriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{23, 0}
}

type TieringRecord_Status int32

const (
	TieringRecord_NEW      TieringRecord_Status = 0
	TieringRecord_RUNNING  TieringRecord_Status = 1
	TieringRecord_WAIT     TieringRecord_Status = 2
	TieringRecord_ABORT    TieringRecord_Status = 3
	TieringRecord_FINISHED TieringRecord_Status = 4
	TieringRecord_FAILED   TieringRecord_Status = 5
)

// Enum value maps for TieringRecord_Status.
var (
	TieringRecord_Status_name = map[int32]string{
		0: "NEW",
		1: "RUNNING",
		2: "WAIT",
		3: "ABORT",
		4: "FINISHED",
		5: "FAILED",
	}
	TieringRecord_Status_value = map[string]int32{
		"NEW":      0,
		"RUNNING":  1,
		"WAIT":     2,
		"ABORT":    3,
		"FINISHED": 4,
		"FAILED":   5,
	}
)

func (x TieringRecord_Status) Enum() *TieringRecord_Status {
	p := new(TieringRecord_Status)
	*p = x
	return p
}

func (x TieringRecord_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TieringRecord_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_tiering_proto_tiering_proto_enumTypes[2].Descriptor()
}

func (TieringRecord_Status) Type() protoreflect.EnumType {
	return &file_tiering_proto_tiering_proto_enumTypes[2]
}

func (x TieringRecord_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TieringRecord_Status.Descriptor instead.
func (TieringRecord_Status) EnumDescriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{24, 0}
}

type PauseTieringRequest_PauseTieringOp int32

const (
	PauseTieringRequest_UPDATE PauseTieringRequest_PauseTieringOp = 0
	PauseTieringRequest_STATUS PauseTieringRequest_PauseTieringOp = 1
)

// Enum value maps for PauseTieringRequest_PauseTieringOp.
var (
	PauseTieringRequest_PauseTieringOp_name = map[int32]string{
		0: "UPDATE",
		1: "STATUS",
	}
	PauseTieringRequest_PauseTieringOp_value = map[string]int32{
		"UPDATE": 0,
		"STATUS": 1,
	}
)

func (x PauseTieringRequest_PauseTieringOp) Enum() *PauseTieringRequest_PauseTieringOp {
	p := new(PauseTieringRequest_PauseTieringOp)
	*p = x
	return p
}

func (x PauseTieringRequest_PauseTieringOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PauseTieringRequest_PauseTieringOp) Descriptor() protoreflect.EnumDescriptor {
	return file_tiering_proto_tiering_proto_enumTypes[3].Descriptor()
}

func (PauseTieringRequest_PauseTieringOp) Type() protoreflect.EnumType {
	return &file_tiering_proto_tiering_proto_enumTypes[3]
}

func (x PauseTieringRequest_PauseTieringOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PauseTieringRequest_PauseTieringOp.Descriptor instead.
func (PauseTieringRequest_PauseTieringOp) EnumDescriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{28, 0}
}

type TieringBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	BucketId uint32 `protobuf:"varint,2,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	// used only in s3 mirror mode
	BackupBucketId uint32 `protobuf:"varint,3,opt,name=backup_bucket_id,json=backupBucketId,proto3" json:"backup_bucket_id,omitempty"`
	ColdTime       uint64 `protobuf:"varint,4,opt,name=cold_time,json=coldTime,proto3" json:"cold_time,omitempty"`
	FlushTimer     string `protobuf:"bytes,5,opt,name=flush_timer,json=flushTimer,proto3" json:"flush_timer,omitempty"`
}

func (x *TieringBasicInfo) Reset() {
	*x = TieringBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TieringBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TieringBasicInfo) ProtoMessage() {}

func (x *TieringBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TieringBasicInfo.ProtoReflect.Descriptor instead.
func (*TieringBasicInfo) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{0}
}

func (x *TieringBasicInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *TieringBasicInfo) GetBucketId() uint32 {
	if x != nil {
		return x.BucketId
	}
	return 0
}

func (x *TieringBasicInfo) GetBackupBucketId() uint32 {
	if x != nil {
		return x.BackupBucketId
	}
	return 0
}

func (x *TieringBasicInfo) GetColdTime() uint64 {
	if x != nil {
		return x.ColdTime
	}
	return 0
}

func (x *TieringBasicInfo) GetFlushTimer() string {
	if x != nil {
		return x.FlushTimer
	}
	return ""
}

// message for rpc add tiering
type AddTieringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseAbsolutePath  bool              `protobuf:"varint,1,opt,name=use_absolute_path,json=useAbsolutePath,proto3" json:"use_absolute_path,omitempty"`
	TieringBasicInfo *TieringBasicInfo `protobuf:"bytes,2,opt,name=tiering_basic_info,json=tieringBasicInfo,proto3" json:"tiering_basic_info,omitempty"`
	TieringId        uint32            `protobuf:"varint,3,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
	Policy           string            `protobuf:"bytes,4,opt,name=policy,proto3" json:"policy,omitempty"`
	PutThreadNum     uint32            `protobuf:"varint,5,opt,name=put_thread_num,json=putThreadNum,proto3" json:"put_thread_num,omitempty"`
	ScanThreadNum    uint32            `protobuf:"varint,6,opt,name=scan_thread_num,json=scanThreadNum,proto3" json:"scan_thread_num,omitempty"`
}

func (x *AddTieringRequest) Reset() {
	*x = AddTieringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTieringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTieringRequest) ProtoMessage() {}

func (x *AddTieringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTieringRequest.ProtoReflect.Descriptor instead.
func (*AddTieringRequest) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{1}
}

func (x *AddTieringRequest) GetUseAbsolutePath() bool {
	if x != nil {
		return x.UseAbsolutePath
	}
	return false
}

func (x *AddTieringRequest) GetTieringBasicInfo() *TieringBasicInfo {
	if x != nil {
		return x.TieringBasicInfo
	}
	return nil
}

func (x *AddTieringRequest) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

func (x *AddTieringRequest) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *AddTieringRequest) GetPutThreadNum() uint32 {
	if x != nil {
		return x.PutThreadNum
	}
	return 0
}

func (x *AddTieringRequest) GetScanThreadNum() uint32 {
	if x != nil {
		return x.ScanThreadNum
	}
	return 0
}

type AddTieringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddTieringResponse) Reset() {
	*x = AddTieringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTieringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTieringResponse) ProtoMessage() {}

func (x *AddTieringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTieringResponse.ProtoReflect.Descriptor instead.
func (*AddTieringResponse) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{2}
}

func (x *AddTieringResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

// message for rpc delete tiering
type DeleteTieringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TieringId uint32 `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
}

func (x *DeleteTieringRequest) Reset() {
	*x = DeleteTieringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTieringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTieringRequest) ProtoMessage() {}

func (x *DeleteTieringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTieringRequest.ProtoReflect.Descriptor instead.
func (*DeleteTieringRequest) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteTieringRequest) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

type DeleteTieringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteTieringResponse) Reset() {
	*x = DeleteTieringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTieringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTieringResponse) ProtoMessage() {}

func (x *DeleteTieringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTieringResponse.ProtoReflect.Descriptor instead.
func (*DeleteTieringResponse) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTieringResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

// message for rpc update tiering
type UpdateTieringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TieringId     uint32 `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
	StateType     uint32 `protobuf:"varint,2,opt,name=state_type,json=stateType,proto3" json:"state_type,omitempty"`
	ColdTime      uint64 `protobuf:"varint,3,opt,name=cold_time,json=coldTime,proto3" json:"cold_time,omitempty"`
	FlushTimer    string `protobuf:"bytes,4,opt,name=flush_timer,json=flushTimer,proto3" json:"flush_timer,omitempty"`
	Policy        string `protobuf:"bytes,5,opt,name=policy,proto3" json:"policy,omitempty"`
	PutThreadNum  uint64 `protobuf:"varint,6,opt,name=put_thread_num,json=putThreadNum,proto3" json:"put_thread_num,omitempty"`
	ScanThreadNum uint64 `protobuf:"varint,7,opt,name=scan_thread_num,json=scanThreadNum,proto3" json:"scan_thread_num,omitempty"`
}

func (x *UpdateTieringRequest) Reset() {
	*x = UpdateTieringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTieringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTieringRequest) ProtoMessage() {}

func (x *UpdateTieringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTieringRequest.ProtoReflect.Descriptor instead.
func (*UpdateTieringRequest) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTieringRequest) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

func (x *UpdateTieringRequest) GetStateType() uint32 {
	if x != nil {
		return x.StateType
	}
	return 0
}

func (x *UpdateTieringRequest) GetColdTime() uint64 {
	if x != nil {
		return x.ColdTime
	}
	return 0
}

func (x *UpdateTieringRequest) GetFlushTimer() string {
	if x != nil {
		return x.FlushTimer
	}
	return ""
}

func (x *UpdateTieringRequest) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *UpdateTieringRequest) GetPutThreadNum() uint64 {
	if x != nil {
		return x.PutThreadNum
	}
	return 0
}

func (x *UpdateTieringRequest) GetScanThreadNum() uint64 {
	if x != nil {
		return x.ScanThreadNum
	}
	return 0
}

type UpdateTieringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateTieringResponse) Reset() {
	*x = UpdateTieringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTieringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTieringResponse) ProtoMessage() {}

func (x *UpdateTieringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTieringResponse.ProtoReflect.Descriptor instead.
func (*UpdateTieringResponse) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTieringResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

// message for rpc flush tiering
type FlushTieringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TieringId uint32 `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
}

func (x *FlushTieringRequest) Reset() {
	*x = FlushTieringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushTieringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushTieringRequest) ProtoMessage() {}

func (x *FlushTieringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushTieringRequest.ProtoReflect.Descriptor instead.
func (*FlushTieringRequest) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{7}
}

func (x *FlushTieringRequest) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

type FlushTieringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FlushTieringResponse) Reset() {
	*x = FlushTieringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushTieringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushTieringResponse) ProtoMessage() {}

func (x *FlushTieringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushTieringResponse.ProtoReflect.Descriptor instead.
func (*FlushTieringResponse) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{8}
}

func (x *FlushTieringResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

type TieringInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TieringId        uint32            `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
	EntryId          string            `protobuf:"bytes,2,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	State            string            `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	TieringBasicInfo *TieringBasicInfo `protobuf:"bytes,4,opt,name=tiering_basic_info,json=tieringBasicInfo,proto3" json:"tiering_basic_info,omitempty"`
	// show this info only when requested
	Policy string `protobuf:"bytes,5,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *TieringInfo) Reset() {
	*x = TieringInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TieringInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TieringInfo) ProtoMessage() {}

func (x *TieringInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TieringInfo.ProtoReflect.Descriptor instead.
func (*TieringInfo) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{9}
}

func (x *TieringInfo) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

func (x *TieringInfo) GetEntryId() string {
	if x != nil {
		return x.EntryId
	}
	return ""
}

func (x *TieringInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *TieringInfo) GetTieringBasicInfo() *TieringBasicInfo {
	if x != nil {
		return x.TieringBasicInfo
	}
	return nil
}

func (x *TieringInfo) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

type TieringLevelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TieringId    uint32 `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
	FileSize     string `protobuf:"bytes,2,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	ColdTime     uint64 `protobuf:"varint,3,opt,name=cold_time,json=coldTime,proto3" json:"cold_time,omitempty"`
	LocalFileNum uint64 `protobuf:"varint,4,opt,name=local_file_num,json=localFileNum,proto3" json:"local_file_num,omitempty"`
	S3FileNum    uint64 `protobuf:"varint,5,opt,name=s3_file_num,json=s3FileNum,proto3" json:"s3_file_num,omitempty"`
}

func (x *TieringLevelInfo) Reset() {
	*x = TieringLevelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TieringLevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TieringLevelInfo) ProtoMessage() {}

func (x *TieringLevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TieringLevelInfo.ProtoReflect.Descriptor instead.
func (*TieringLevelInfo) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{10}
}

func (x *TieringLevelInfo) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

func (x *TieringLevelInfo) GetFileSize() string {
	if x != nil {
		return x.FileSize
	}
	return ""
}

func (x *TieringLevelInfo) GetColdTime() uint64 {
	if x != nil {
		return x.ColdTime
	}
	return 0
}

func (x *TieringLevelInfo) GetLocalFileNum() uint64 {
	if x != nil {
		return x.LocalFileNum
	}
	return 0
}

func (x *TieringLevelInfo) GetS3FileNum() uint64 {
	if x != nil {
		return x.S3FileNum
	}
	return 0
}

// messag for rpc list tiering
type ListTieringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// default 0, if so, will list all tiering info
	TieringId uint32 `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
	// if show s3 flush policy, default false
	ShowPolicy bool `protobuf:"varint,2,opt,name=show_policy,json=showPolicy,proto3" json:"show_policy,omitempty"`
	// if show s3 flush level, default false
	ShowLevel bool `protobuf:"varint,3,opt,name=show_level,json=showLevel,proto3" json:"show_level,omitempty"`
}

func (x *ListTieringRequest) Reset() {
	*x = ListTieringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTieringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTieringRequest) ProtoMessage() {}

func (x *ListTieringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTieringRequest.ProtoReflect.Descriptor instead.
func (*ListTieringRequest) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{11}
}

func (x *ListTieringRequest) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

func (x *ListTieringRequest) GetShowPolicy() bool {
	if x != nil {
		return x.ShowPolicy
	}
	return false
}

func (x *ListTieringRequest) GetShowLevel() bool {
	if x != nil {
		return x.ShowLevel
	}
	return false
}

type ListTieringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *proto.ResMes  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	TieringInfo []*TieringInfo `protobuf:"bytes,2,rep,name=tiering_info,json=tieringInfo,proto3" json:"tiering_info,omitempty"`
	// show this info and only this info when requested
	TieringLevelInfo []*TieringLevelInfo `protobuf:"bytes,3,rep,name=tiering_level_info,json=tieringLevelInfo,proto3" json:"tiering_level_info,omitempty"`
}

func (x *ListTieringResponse) Reset() {
	*x = ListTieringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTieringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTieringResponse) ProtoMessage() {}

func (x *ListTieringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTieringResponse.ProtoReflect.Descriptor instead.
func (*ListTieringResponse) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{12}
}

func (x *ListTieringResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListTieringResponse) GetTieringInfo() []*TieringInfo {
	if x != nil {
		return x.TieringInfo
	}
	return nil
}

func (x *ListTieringResponse) GetTieringLevelInfo() []*TieringLevelInfo {
	if x != nil {
		return x.TieringLevelInfo
	}
	return nil
}

type TieringStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TieringId    uint32 `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
	OriginalSize string `protobuf:"bytes,2,opt,name=original_size,json=originalSize,proto3" json:"original_size,omitempty"`
	CompressSize string `protobuf:"bytes,3,opt,name=compress_size,json=compressSize,proto3" json:"compress_size,omitempty"`
	Ratio        string `protobuf:"bytes,4,opt,name=ratio,proto3" json:"ratio,omitempty"`
	Path         string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *TieringStat) Reset() {
	*x = TieringStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TieringStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TieringStat) ProtoMessage() {}

func (x *TieringStat) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TieringStat.ProtoReflect.Descriptor instead.
func (*TieringStat) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{13}
}

func (x *TieringStat) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

func (x *TieringStat) GetOriginalSize() string {
	if x != nil {
		return x.OriginalSize
	}
	return ""
}

func (x *TieringStat) GetCompressSize() string {
	if x != nil {
		return x.CompressSize
	}
	return ""
}

func (x *TieringStat) GetRatio() string {
	if x != nil {
		return x.Ratio
	}
	return ""
}

func (x *TieringStat) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// message for rpc stat tiering
type StatTieringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// default 0, if so, will list all tiering stat
	TieringId uint32 `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
}

func (x *StatTieringRequest) Reset() {
	*x = StatTieringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatTieringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatTieringRequest) ProtoMessage() {}

func (x *StatTieringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatTieringRequest.ProtoReflect.Descriptor instead.
func (*StatTieringRequest) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{14}
}

func (x *StatTieringRequest) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

type StatTieringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      *proto.ResMes  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	TieringStat []*TieringStat `protobuf:"bytes,2,rep,name=tiering_stat,json=tieringStat,proto3" json:"tiering_stat,omitempty"`
}

func (x *StatTieringResponse) Reset() {
	*x = StatTieringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatTieringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatTieringResponse) ProtoMessage() {}

func (x *StatTieringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatTieringResponse.ProtoReflect.Descriptor instead.
func (*StatTieringResponse) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{15}
}

func (x *StatTieringResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *StatTieringResponse) GetTieringStat() []*TieringStat {
	if x != nil {
		return x.TieringStat
	}
	return nil
}

// message for rpc recover tiering
type RecoverTieringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TieringId   uint32 `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
	FullRecover bool   `protobuf:"varint,2,opt,name=full_recover,json=fullRecover,proto3" json:"full_recover,omitempty"`
}

func (x *RecoverTieringRequest) Reset() {
	*x = RecoverTieringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverTieringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverTieringRequest) ProtoMessage() {}

func (x *RecoverTieringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverTieringRequest.ProtoReflect.Descriptor instead.
func (*RecoverTieringRequest) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{16}
}

func (x *RecoverTieringRequest) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

func (x *RecoverTieringRequest) GetFullRecover() bool {
	if x != nil {
		return x.FullRecover
	}
	return false
}

type RecoverTieringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RecoverTieringResponse) Reset() {
	*x = RecoverTieringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverTieringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverTieringResponse) ProtoMessage() {}

func (x *RecoverTieringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverTieringResponse.ProtoReflect.Descriptor instead.
func (*RecoverTieringResponse) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{17}
}

func (x *RecoverTieringResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

type RecoverTieringStatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResyncType  string `protobuf:"bytes,1,opt,name=resync_type,json=resyncType,proto3" json:"resync_type,omitempty"`
	ResyncState string `protobuf:"bytes,2,opt,name=resync_state,json=resyncState,proto3" json:"resync_state,omitempty"`
	StartTime   string `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     string `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	TotalWork   uint64 `protobuf:"varint,5,opt,name=total_work,json=totalWork,proto3" json:"total_work,omitempty"`
	ErrorWork   uint64 `protobuf:"varint,6,opt,name=error_work,json=errorWork,proto3" json:"error_work,omitempty"`
	SuccessWork uint64 `protobuf:"varint,7,opt,name=success_work,json=successWork,proto3" json:"success_work,omitempty"`
}

func (x *RecoverTieringStatInfo) Reset() {
	*x = RecoverTieringStatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverTieringStatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverTieringStatInfo) ProtoMessage() {}

func (x *RecoverTieringStatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverTieringStatInfo.ProtoReflect.Descriptor instead.
func (*RecoverTieringStatInfo) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{18}
}

func (x *RecoverTieringStatInfo) GetResyncType() string {
	if x != nil {
		return x.ResyncType
	}
	return ""
}

func (x *RecoverTieringStatInfo) GetResyncState() string {
	if x != nil {
		return x.ResyncState
	}
	return ""
}

func (x *RecoverTieringStatInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *RecoverTieringStatInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *RecoverTieringStatInfo) GetTotalWork() uint64 {
	if x != nil {
		return x.TotalWork
	}
	return 0
}

func (x *RecoverTieringStatInfo) GetErrorWork() uint64 {
	if x != nil {
		return x.ErrorWork
	}
	return 0
}

func (x *RecoverTieringStatInfo) GetSuccessWork() uint64 {
	if x != nil {
		return x.SuccessWork
	}
	return 0
}

// message for rpc get recover tiering stat
type RecoverTieringStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TieringId uint32 `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
}

func (x *RecoverTieringStatRequest) Reset() {
	*x = RecoverTieringStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverTieringStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverTieringStatRequest) ProtoMessage() {}

func (x *RecoverTieringStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverTieringStatRequest.ProtoReflect.Descriptor instead.
func (*RecoverTieringStatRequest) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{19}
}

func (x *RecoverTieringStatRequest) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

type RecoverTieringStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   *proto.ResMes           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	StatInfo *RecoverTieringStatInfo `protobuf:"bytes,2,opt,name=stat_info,json=statInfo,proto3" json:"stat_info,omitempty"`
}

func (x *RecoverTieringStatResponse) Reset() {
	*x = RecoverTieringStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverTieringStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverTieringStatResponse) ProtoMessage() {}

func (x *RecoverTieringStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverTieringStatResponse.ProtoReflect.Descriptor instead.
func (*RecoverTieringStatResponse) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{20}
}

func (x *RecoverTieringStatResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RecoverTieringStatResponse) GetStatInfo() *RecoverTieringStatInfo {
	if x != nil {
		return x.StatInfo
	}
	return nil
}

// message for rpc scan tiering
type ScanTieringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TieringId uint32 `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
}

func (x *ScanTieringRequest) Reset() {
	*x = ScanTieringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanTieringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanTieringRequest) ProtoMessage() {}

func (x *ScanTieringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanTieringRequest.ProtoReflect.Descriptor instead.
func (*ScanTieringRequest) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{21}
}

func (x *ScanTieringRequest) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

type ScanTieringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ScanTieringResponse) Reset() {
	*x = ScanTieringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanTieringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanTieringResponse) ProtoMessage() {}

func (x *ScanTieringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanTieringResponse.ProtoReflect.Descriptor instead.
func (*ScanTieringResponse) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{22}
}

func (x *ScanTieringResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

type InfoTieringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TieringId uint32                           `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
	Op        InfoTieringRequest_InfoTieringOp `protobuf:"varint,2,opt,name=op,proto3,enum=YrcfAgent.InfoTieringRequest_InfoTieringOp" json:"op,omitempty"`
}

func (x *InfoTieringRequest) Reset() {
	*x = InfoTieringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoTieringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoTieringRequest) ProtoMessage() {}

func (x *InfoTieringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoTieringRequest.ProtoReflect.Descriptor instead.
func (*InfoTieringRequest) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{23}
}

func (x *InfoTieringRequest) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

func (x *InfoTieringRequest) GetOp() InfoTieringRequest_InfoTieringOp {
	if x != nil {
		return x.Op
	}
	return InfoTieringRequest_GET_CURRENT
}

type TieringRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TieringId uint32               `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
	Status    TieringRecord_Status `protobuf:"varint,2,opt,name=status,proto3,enum=YrcfAgent.TieringRecord_Status" json:"status,omitempty"`
	StartTime string               `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string               `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Total     uint64               `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	Success   uint64               `protobuf:"varint,6,opt,name=success,proto3" json:"success,omitempty"`
	Failed    uint64               `protobuf:"varint,7,opt,name=failed,proto3" json:"failed,omitempty"`
	Noent     uint64               `protobuf:"varint,8,opt,name=noent,proto3" json:"noent,omitempty"`
	Beused    uint64               `protobuf:"varint,9,opt,name=beused,proto3" json:"beused,omitempty"`
}

func (x *TieringRecord) Reset() {
	*x = TieringRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TieringRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TieringRecord) ProtoMessage() {}

func (x *TieringRecord) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TieringRecord.ProtoReflect.Descriptor instead.
func (*TieringRecord) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{24}
}

func (x *TieringRecord) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

func (x *TieringRecord) GetStatus() TieringRecord_Status {
	if x != nil {
		return x.Status
	}
	return TieringRecord_NEW
}

func (x *TieringRecord) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TieringRecord) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *TieringRecord) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TieringRecord) GetSuccess() uint64 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *TieringRecord) GetFailed() uint64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *TieringRecord) GetNoent() uint64 {
	if x != nil {
		return x.Noent
	}
	return 0
}

func (x *TieringRecord) GetBeused() uint64 {
	if x != nil {
		return x.Beused
	}
	return 0
}

type InfoTieringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  uint32           `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Records []*TieringRecord `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *InfoTieringResponse) Reset() {
	*x = InfoTieringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoTieringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoTieringResponse) ProtoMessage() {}

func (x *InfoTieringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoTieringResponse.ProtoReflect.Descriptor instead.
func (*InfoTieringResponse) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{25}
}

func (x *InfoTieringResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *InfoTieringResponse) GetRecords() []*TieringRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type AbortTieringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TieringId uint32 `protobuf:"varint,1,opt,name=tiering_id,json=tieringId,proto3" json:"tiering_id,omitempty"`
	All       bool   `protobuf:"varint,2,opt,name=all,proto3" json:"all,omitempty"`
}

func (x *AbortTieringRequest) Reset() {
	*x = AbortTieringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortTieringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortTieringRequest) ProtoMessage() {}

func (x *AbortTieringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortTieringRequest.ProtoReflect.Descriptor instead.
func (*AbortTieringRequest) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{26}
}

func (x *AbortTieringRequest) GetTieringId() uint32 {
	if x != nil {
		return x.TieringId
	}
	return 0
}

func (x *AbortTieringRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

type AbortTieringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *proto.ResMes `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AbortTieringResponse) Reset() {
	*x = AbortTieringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortTieringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortTieringResponse) ProtoMessage() {}

func (x *AbortTieringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortTieringResponse.ProtoReflect.Descriptor instead.
func (*AbortTieringResponse) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{27}
}

func (x *AbortTieringResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

type PauseTieringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op PauseTieringRequest_PauseTieringOp `protobuf:"varint,1,opt,name=op,proto3,enum=YrcfAgent.PauseTieringRequest_PauseTieringOp" json:"op,omitempty"`
	On bool                               `protobuf:"varint,2,opt,name=on,proto3" json:"on,omitempty"`
}

func (x *PauseTieringRequest) Reset() {
	*x = PauseTieringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseTieringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseTieringRequest) ProtoMessage() {}

func (x *PauseTieringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseTieringRequest.ProtoReflect.Descriptor instead.
func (*PauseTieringRequest) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{28}
}

func (x *PauseTieringRequest) GetOp() PauseTieringRequest_PauseTieringOp {
	if x != nil {
		return x.Op
	}
	return PauseTieringRequest_UPDATE
}

func (x *PauseTieringRequest) GetOn() bool {
	if x != nil {
		return x.On
	}
	return false
}

type PauseTieringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Result *proto.ResMes `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PauseTieringResponse) Reset() {
	*x = PauseTieringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiering_proto_tiering_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseTieringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseTieringResponse) ProtoMessage() {}

func (x *PauseTieringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiering_proto_tiering_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseTieringResponse.ProtoReflect.Descriptor instead.
func (*PauseTieringResponse) Descriptor() ([]byte, []int) {
	return file_tiering_proto_tiering_proto_rawDescGZIP(), []int{29}
}

func (x *PauseTieringResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *PauseTieringResponse) GetResult() *proto.ResMes {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_tiering_proto_tiering_proto protoreflect.FileDescriptor

var file_tiering_proto_tiering_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x59,
	0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x01, 0x0a, 0x10, 0x54, 0x69, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x6c,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6c, 0x75, 0x73,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x22, 0x8f, 0x02, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x54, 0x69,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x75, 0x73, 0x65, 0x5f, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x41, 0x62, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x49, 0x0a, 0x12, 0x74, 0x69, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x10, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x75,
	0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x70, 0x75, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d,
	0x12, 0x26, 0x0a, 0x0f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x22, 0x35, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x35, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xd2, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6c, 0x75, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x24, 0x0a,
	0x0e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x75, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x63,
	0x61, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x22, 0x58, 0x0a, 0x12, 0x53,
	0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c, 0x59, 0x5f,
	0x55, 0x50, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c, 0x59,
	0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x55, 0x50, 0x10, 0x03, 0x22, 0x38, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x34, 0x0a, 0x13, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x14, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54, 0x69,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc0,
	0x01, 0x0a, 0x0b, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x49,
	0x0a, 0x12, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x59, 0x72, 0x63,
	0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x22, 0xb1, 0x01, 0x0a, 0x10, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x33, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x33, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x73, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x73, 0x68, 0x6f, 0x77, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x73, 0x68, 0x6f, 0x77, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xbc, 0x01, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x59, 0x72, 0x63, 0x66,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x49,
	0x0a, 0x12, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x59, 0x72, 0x63,
	0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x0b, 0x54, 0x69,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x33, 0x0a, 0x12,
	0x53, 0x74, 0x61, 0x74, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x22, 0x71, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65,
	0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x74, 0x69, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x69, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0b, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x22, 0x59, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x66, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22,
	0x39, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x4d,
	0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xf7, 0x01, 0x0a, 0x16, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x79,
	0x6e, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x6f,
	0x72, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x57, 0x6f, 0x72,
	0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x57, 0x6f, 0x72, 0x6b, 0x22, 0x3a, 0x0a, 0x19, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x22, 0x7d, 0x0a, 0x1a, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x3e, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x33, 0x0a, 0x12, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x13, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x69, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa3, 0x01, 0x0a,
	0x12, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x3b, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x22,
	0x31, 0x0a, 0x0d, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x45, 0x54, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59,
	0x10, 0x01, 0x22, 0xe6, 0x02, 0x0a, 0x0d, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e,
	0x6f, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x75, 0x73, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x65, 0x75, 0x73, 0x65, 0x64, 0x22, 0x4d, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x57, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x57, 0x41, 0x49, 0x54, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x22, 0x61, 0x0a, 0x13, 0x49,
	0x6e, 0x66, 0x6f, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x59, 0x72,
	0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x46,
	0x0a, 0x13, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x22, 0x37, 0x0a, 0x14, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x8e, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x75, 0x73, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x0e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x01,
	0x22, 0x4f, 0x0a, 0x14, 0x50, 0x61, 0x75, 0x73, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x32, 0xf9, 0x07, 0x0a, 0x07, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x4b, 0x0a,
	0x0a, 0x41, 0x64, 0x64, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x59, 0x72,
	0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x69, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x59, 0x72, 0x63, 0x66,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x59, 0x72,
	0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x59,
	0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x54, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x1f, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x53, 0x74, 0x61,
	0x74, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x2e, 0x59, 0x72,
	0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x12, 0x24, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x41, 0x62, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x59, 0x72, 0x63, 0x66, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x59, 0x72, 0x63,
	0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x54, 0x69, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x59, 0x72, 0x63,
	0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x54, 0x69, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2c, 0x5a,
	0x2a, 0x79, 0x72, 0x63, 0x66, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x3b, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_tiering_proto_tiering_proto_rawDescOnce sync.Once
	file_tiering_proto_tiering_proto_rawDescData = file_tiering_proto_tiering_proto_rawDesc
)

func file_tiering_proto_tiering_proto_rawDescGZIP() []byte {
	file_tiering_proto_tiering_proto_rawDescOnce.Do(func() {
		file_tiering_proto_tiering_proto_rawDescData = protoimpl.X.CompressGZIP(file_tiering_proto_tiering_proto_rawDescData)
	})
	return file_tiering_proto_tiering_proto_rawDescData
}

var file_tiering_proto_tiering_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_tiering_proto_tiering_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_tiering_proto_tiering_proto_goTypes = []any{
	(UpdateTieringRequest_SetBucketStateType)(0), // 0: YrcfAgent.UpdateTieringRequest.SetBucketStateType
	(InfoTieringRequest_InfoTieringOp)(0),        // 1: YrcfAgent.InfoTieringRequest.InfoTieringOp
	(TieringRecord_Status)(0),                    // 2: YrcfAgent.TieringRecord.Status
	(PauseTieringRequest_PauseTieringOp)(0),      // 3: YrcfAgent.PauseTieringRequest.PauseTieringOp
	(*TieringBasicInfo)(nil),                     // 4: YrcfAgent.TieringBasicInfo
	(*AddTieringRequest)(nil),                    // 5: YrcfAgent.AddTieringRequest
	(*AddTieringResponse)(nil),                   // 6: YrcfAgent.AddTieringResponse
	(*DeleteTieringRequest)(nil),                 // 7: YrcfAgent.DeleteTieringRequest
	(*DeleteTieringResponse)(nil),                // 8: YrcfAgent.DeleteTieringResponse
	(*UpdateTieringRequest)(nil),                 // 9: YrcfAgent.UpdateTieringRequest
	(*UpdateTieringResponse)(nil),                // 10: YrcfAgent.UpdateTieringResponse
	(*FlushTieringRequest)(nil),                  // 11: YrcfAgent.FlushTieringRequest
	(*FlushTieringResponse)(nil),                 // 12: YrcfAgent.FlushTieringResponse
	(*TieringInfo)(nil),                          // 13: YrcfAgent.TieringInfo
	(*TieringLevelInfo)(nil),                     // 14: YrcfAgent.TieringLevelInfo
	(*ListTieringRequest)(nil),                   // 15: YrcfAgent.ListTieringRequest
	(*ListTieringResponse)(nil),                  // 16: YrcfAgent.ListTieringResponse
	(*TieringStat)(nil),                          // 17: YrcfAgent.TieringStat
	(*StatTieringRequest)(nil),                   // 18: YrcfAgent.StatTieringRequest
	(*StatTieringResponse)(nil),                  // 19: YrcfAgent.StatTieringResponse
	(*RecoverTieringRequest)(nil),                // 20: YrcfAgent.RecoverTieringRequest
	(*RecoverTieringResponse)(nil),               // 21: YrcfAgent.RecoverTieringResponse
	(*RecoverTieringStatInfo)(nil),               // 22: YrcfAgent.RecoverTieringStatInfo
	(*RecoverTieringStatRequest)(nil),            // 23: YrcfAgent.RecoverTieringStatRequest
	(*RecoverTieringStatResponse)(nil),           // 24: YrcfAgent.RecoverTieringStatResponse
	(*ScanTieringRequest)(nil),                   // 25: YrcfAgent.ScanTieringRequest
	(*ScanTieringResponse)(nil),                  // 26: YrcfAgent.ScanTieringResponse
	(*InfoTieringRequest)(nil),                   // 27: YrcfAgent.InfoTieringRequest
	(*TieringRecord)(nil),                        // 28: YrcfAgent.TieringRecord
	(*InfoTieringResponse)(nil),                  // 29: YrcfAgent.InfoTieringResponse
	(*AbortTieringRequest)(nil),                  // 30: YrcfAgent.AbortTieringRequest
	(*AbortTieringResponse)(nil),                 // 31: YrcfAgent.AbortTieringResponse
	(*PauseTieringRequest)(nil),                  // 32: YrcfAgent.PauseTieringRequest
	(*PauseTieringResponse)(nil),                 // 33: YrcfAgent.PauseTieringResponse
	(*proto.ResMes)(nil),                         // 34: ResMes
}
var file_tiering_proto_tiering_proto_depIdxs = []int32{
	4,  // 0: YrcfAgent.AddTieringRequest.tiering_basic_info:type_name -> YrcfAgent.TieringBasicInfo
	34, // 1: YrcfAgent.AddTieringResponse.result:type_name -> ResMes
	34, // 2: YrcfAgent.DeleteTieringResponse.result:type_name -> ResMes
	34, // 3: YrcfAgent.UpdateTieringResponse.result:type_name -> ResMes
	34, // 4: YrcfAgent.FlushTieringResponse.result:type_name -> ResMes
	4,  // 5: YrcfAgent.TieringInfo.tiering_basic_info:type_name -> YrcfAgent.TieringBasicInfo
	34, // 6: YrcfAgent.ListTieringResponse.result:type_name -> ResMes
	13, // 7: YrcfAgent.ListTieringResponse.tiering_info:type_name -> YrcfAgent.TieringInfo
	14, // 8: YrcfAgent.ListTieringResponse.tiering_level_info:type_name -> YrcfAgent.TieringLevelInfo
	34, // 9: YrcfAgent.StatTieringResponse.result:type_name -> ResMes
	17, // 10: YrcfAgent.StatTieringResponse.tiering_stat:type_name -> YrcfAgent.TieringStat
	34, // 11: YrcfAgent.RecoverTieringResponse.result:type_name -> ResMes
	34, // 12: YrcfAgent.RecoverTieringStatResponse.result:type_name -> ResMes
	22, // 13: YrcfAgent.RecoverTieringStatResponse.stat_info:type_name -> YrcfAgent.RecoverTieringStatInfo
	34, // 14: YrcfAgent.ScanTieringResponse.result:type_name -> ResMes
	1,  // 15: YrcfAgent.InfoTieringRequest.op:type_name -> YrcfAgent.InfoTieringRequest.InfoTieringOp
	2,  // 16: YrcfAgent.TieringRecord.status:type_name -> YrcfAgent.TieringRecord.Status
	28, // 17: YrcfAgent.InfoTieringResponse.records:type_name -> YrcfAgent.TieringRecord
	34, // 18: YrcfAgent.AbortTieringResponse.result:type_name -> ResMes
	3,  // 19: YrcfAgent.PauseTieringRequest.op:type_name -> YrcfAgent.PauseTieringRequest.PauseTieringOp
	34, // 20: YrcfAgent.PauseTieringResponse.result:type_name -> ResMes
	5,  // 21: YrcfAgent.Tiering.AddTiering:input_type -> YrcfAgent.AddTieringRequest
	7,  // 22: YrcfAgent.Tiering.DeleteTiering:input_type -> YrcfAgent.DeleteTieringRequest
	9,  // 23: YrcfAgent.Tiering.UpdateTiering:input_type -> YrcfAgent.UpdateTieringRequest
	11, // 24: YrcfAgent.Tiering.FlushTiering:input_type -> YrcfAgent.FlushTieringRequest
	15, // 25: YrcfAgent.Tiering.ListTiering:input_type -> YrcfAgent.ListTieringRequest
	18, // 26: YrcfAgent.Tiering.StatTiering:input_type -> YrcfAgent.StatTieringRequest
	20, // 27: YrcfAgent.Tiering.RecoverTiering:input_type -> YrcfAgent.RecoverTieringRequest
	23, // 28: YrcfAgent.Tiering.RecoverTieringStat:input_type -> YrcfAgent.RecoverTieringStatRequest
	25, // 29: YrcfAgent.Tiering.ScanTiering:input_type -> YrcfAgent.ScanTieringRequest
	27, // 30: YrcfAgent.Tiering.InfoTiering:input_type -> YrcfAgent.InfoTieringRequest
	30, // 31: YrcfAgent.Tiering.AbortTiering:input_type -> YrcfAgent.AbortTieringRequest
	32, // 32: YrcfAgent.Tiering.PauseTiering:input_type -> YrcfAgent.PauseTieringRequest
	6,  // 33: YrcfAgent.Tiering.AddTiering:output_type -> YrcfAgent.AddTieringResponse
	8,  // 34: YrcfAgent.Tiering.DeleteTiering:output_type -> YrcfAgent.DeleteTieringResponse
	10, // 35: YrcfAgent.Tiering.UpdateTiering:output_type -> YrcfAgent.UpdateTieringResponse
	12, // 36: YrcfAgent.Tiering.FlushTiering:output_type -> YrcfAgent.FlushTieringResponse
	16, // 37: YrcfAgent.Tiering.ListTiering:output_type -> YrcfAgent.ListTieringResponse
	19, // 38: YrcfAgent.Tiering.StatTiering:output_type -> YrcfAgent.StatTieringResponse
	21, // 39: YrcfAgent.Tiering.RecoverTiering:output_type -> YrcfAgent.RecoverTieringResponse
	24, // 40: YrcfAgent.Tiering.RecoverTieringStat:output_type -> YrcfAgent.RecoverTieringStatResponse
	26, // 41: YrcfAgent.Tiering.ScanTiering:output_type -> YrcfAgent.ScanTieringResponse
	29, // 42: YrcfAgent.Tiering.InfoTiering:output_type -> YrcfAgent.InfoTieringResponse
	31, // 43: YrcfAgent.Tiering.AbortTiering:output_type -> YrcfAgent.AbortTieringResponse
	33, // 44: YrcfAgent.Tiering.PauseTiering:output_type -> YrcfAgent.PauseTieringResponse
	33, // [33:45] is the sub-list for method output_type
	21, // [21:33] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_tiering_proto_tiering_proto_init() }
func file_tiering_proto_tiering_proto_init() {
	if File_tiering_proto_tiering_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tiering_proto_tiering_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TieringBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddTieringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddTieringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTieringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTieringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTieringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTieringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*FlushTieringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*FlushTieringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TieringInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TieringLevelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ListTieringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ListTieringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*TieringStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*StatTieringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*StatTieringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*RecoverTieringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*RecoverTieringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*RecoverTieringStatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*RecoverTieringStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*RecoverTieringStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ScanTieringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ScanTieringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*InfoTieringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*TieringRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*InfoTieringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*AbortTieringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*AbortTieringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*PauseTieringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiering_proto_tiering_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*PauseTieringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tiering_proto_tiering_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tiering_proto_tiering_proto_goTypes,
		DependencyIndexes: file_tiering_proto_tiering_proto_depIdxs,
		EnumInfos:         file_tiering_proto_tiering_proto_enumTypes,
		MessageInfos:      file_tiering_proto_tiering_proto_msgTypes,
	}.Build()
	File_tiering_proto_tiering_proto = out.File
	file_tiering_proto_tiering_proto_rawDesc = nil
	file_tiering_proto_tiering_proto_goTypes = nil
	file_tiering_proto_tiering_proto_depIdxs = nil
}
